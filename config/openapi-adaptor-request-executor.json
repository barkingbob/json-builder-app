{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Request Executor API",
    "description" : "Request Executor Services",
    "contact" : {
      "name" : "Critical Software",
      "url" : "https://criticalsoftware.com"
    },
    "version" : "1.0.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  } ],
  "tags" : [ {
    "name" : "Request Executor API",
    "description" : "Request Executor Endpoints"
  } ],
  "paths" : {
    "/v1/request-executor/body" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit an XML DUIS Body element to the adaptor.",
        "description" : "Allows to submit DUIS requests to the DCC gateway providing a set of inputs to specify the header and the XML DUIS Body element.",
        "operationId" : "sendWithBodyXml",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RequestExecutorBodyDto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1",
                  "target" : "12-29-91-e5-cC-B4-0B-0b",
                  "originatorCounter" : 10,
                  "sr" : "14.1",
                  "srv" : "14.1",
                  "transformCv" : 1,
                  "cv" : 1,
                  "firstInSequence" : true,
                  "precedingServiceRequestId" : "3d-f9-BE-6b-09-60-5e-4C:79-5E-Ee-80-8c-e0-Cf-79:18446744073709551274"
                },
                "bodyXml" : "PHNyOlJlYWRGaXJtd2FyZVZlcnNpb24geG1sbnM6c3I9Imh0dHA6Ly93d3cuZGNjaW50ZXJmYWNlLmNvLnVrL1NlcnZpY2VVc2VyR2F0ZXdheSIvPg=="
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.1.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.1.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.1.1 (Update Import Tariff (Primary Element))\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.1.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_1_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1007,
                  "sr" : "1.1",
                  "srv" : "1.1.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "gasTariffElements" : {
                    "switchingTable" : {
                      "dayProfiles" : [ {
                        "dayName" : 1,
                        "touTariffAction" : 1
                      }, {
                        "dayName" : 2,
                        "touTariffAction" : 2
                      }, {
                        "dayName" : 3,
                        "touTariffAction" : 3
                      }, {
                        "dayName" : 4,
                        "touTariffAction" : 4
                      } ],
                      "weekProfiles" : [ {
                        "weekName" : 1,
                        "referencedDayName" : [ "1", "1", "1", "1", "1", "2", "2" ]
                      }, {
                        "weekName" : 2,
                        "referencedDayName" : [ "3", "3", "3", "3", "3", "4", "4" ]
                      } ],
                      "seasons" : [ {
                        "seasonStartDate" : {
                          "month" : "3",
                          "dayOfMonth" : "20"
                        },
                        "referencedWeekName" : 1
                      }, {
                        "seasonStartDate" : {
                          "month" : "6",
                          "dayOfMonth" : "21"
                        },
                        "referencedWeekName" : 2
                      } ]
                    },
                    "specialDays" : [ {
                      "date" : {
                        "year" : "2015",
                        "month" : "1",
                        "dayOfMonth" : "1"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "1",
                        "dayOfMonth" : "2"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "3",
                        "dayOfMonth" : "1"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "3",
                        "dayOfMonth" : "17"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "4",
                        "dayOfMonth" : "3"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "4",
                        "dayOfMonth" : "6"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "4",
                        "dayOfMonth" : "23"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "5",
                        "dayOfMonth" : "4"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "5",
                        "dayOfMonth" : "9"
                      },
                      "referencedDayName" : 2
                    }, {
                      "date" : {
                        "year" : "2015",
                        "month" : "5",
                        "dayOfMonth" : "25"
                      },
                      "referencedDayName" : 2
                    } ],
                    "thresholdMatrix" : [ {
                      "index" : 1,
                      "value" : 1
                    } ]
                  },
                  "priceElements" : {
                    "gasPriceElements" : {
                      "currencyUnits" : "GBP",
                      "standingCharge" : 22465,
                      "touTariff" : [ {
                        "index" : 1,
                        "value" : 9600
                      }, {
                        "index" : 2,
                        "value" : 10200
                      }, {
                        "index" : 3,
                        "value" : 10750
                      }, {
                        "index" : 4,
                        "value" : 11000
                      } ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.1.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.1.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.1.2 (Update Import Tariff (Secondary\nElement)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.1.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_1_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "1.1",
                  "srv" : "1.1.2",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "switchingTable" : {
                    "dayProfiles" : [ {
                      "dayName" : 1,
                      "profileSchedule" : [ {
                        "startTime" : "00:00:00.00Z",
                        "touTariffAction" : 1
                      }, {
                        "startTime" : "07:00:00.00Z",
                        "touTariffAction" : 4
                      }, {
                        "startTime" : "19:00:00.00Z",
                        "touTariffAction" : 3
                      } ]
                    }, {
                      "dayName" : 2,
                      "profileSchedule" : [ {
                        "startTime" : "06:00:00.00Z",
                        "touTariffAction" : 4
                      }, {
                        "startTime" : "18:00:00.00Z",
                        "touTariffAction" : 3
                      }, {
                        "startTime" : "23:00:00.00Z",
                        "touTariffAction" : 1
                      } ]
                    }, {
                      "dayName" : 3,
                      "profileSchedule" : [ {
                        "startTime" : "00:00:00.00Z",
                        "touTariffAction" : 4
                      } ]
                    } ],
                    "weekProfiles" : [ {
                      "weekName" : 1,
                      "referencedDayName" : [ "1", "1", "1", "1", "1", "3", "3" ]
                    }, {
                      "weekName" : 2,
                      "referencedDayName" : [ "2", "2", "2", "2", "2", "3", "3" ]
                    } ],
                    "seasons" : [ {
                      "seasonName" : "winter",
                      "seasonStartDate" : {
                        "year" : "2014",
                        "month" : "10",
                        "dayOfMonth" : "27"
                      },
                      "referencedWeekName" : 1
                    }, {
                      "seasonName" : "summer",
                      "seasonStartDate" : {
                        "year" : "2015",
                        "month" : "03",
                        "dayOfMonth" : "29"
                      },
                      "referencedWeekName" : 2
                    } ]
                  },
                  "specialDays" : [ {
                    "date" : {
                      "year" : "2015",
                      "month" : "05",
                      "dayOfMonth" : "01"
                    },
                    "referencedDayName" : 3
                  }, {
                    "date" : {
                      "month" : "12",
                      "dayOfMonth" : "25"
                    },
                    "referencedDayName" : 1
                  } ],
                  "priceElements" : {
                    "priceScale" : -5,
                    "electricityPriceElement" : [ {
                      "index" : 1,
                      "value" : 10100
                    }, {
                      "index" : 2,
                      "value" : 0
                    }, {
                      "index" : 3,
                      "value" : 12300
                    }, {
                      "index" : 4,
                      "value" : 13400
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.2.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.2.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.2.1 (Update Price (Primary Element)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.2.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_2_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1005,
                  "sr" : "1.2",
                  "srv" : "1.2.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "priceElements" : {
                    "electricityPriceElements" : {
                      "standingCharge" : 20000,
                      "standingChargeScale" : -5,
                      "priceScale" : -5,
                      "hybridTariff" : {
                        "blockPrices" : [ {
                          "index" : 1,
                          "blockPrice" : [ {
                            "index" : 1,
                            "value" : 3289
                          }, {
                            "index" : 2,
                            "value" : 4546
                          } ]
                        }, {
                          "index" : 2,
                          "blockPrice" : [ {
                            "index" : 1,
                            "value" : 5002
                          }, {
                            "index" : 2,
                            "value" : 7969
                          } ]
                        } ],
                        "touPrice" : [ {
                          "index" : 1,
                          "value" : 3121
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.2.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.2.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.2.2 (Update Price (Secondary Element)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.2.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_2_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "1.2",
                  "srv" : "1.2.2",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "priceElements" : {
                    "priceScale" : -5,
                    "electricityPriceElement" : [ {
                      "index" : 1,
                      "value" : 1010
                    }, {
                      "index" : 2,
                      "value" : 1120
                    }, {
                      "index" : 3,
                      "value" : 1230
                    }, {
                      "index" : 4,
                      "value" : 1340
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.5 (Update Meter Balance) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "1.5",
                  "srv" : "1.5",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "prepaymentMode" : {
                    "adjustMeterBalance" : 1200000
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.6" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.6.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.6 (Update Payment Mode) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_6_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1011,
                  "sr" : "1.6",
                  "srv" : "1.6",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "prepayment" : {
                    "suspendDebtDisabled" : true,
                    "suspendDebtEmergency" : false,
                    "disablementThreshold" : 556677
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/1.7" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 1.7.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 1.7 (Reset Tariff Block Counter Matrix) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv1.7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_1_7_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "1.7",
                  "srv" : "1.7",
                  "cv" : 4
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/11.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 11.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 11.1 (Update Firmware) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv11.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_11_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "11.1",
                  "srv" : "11.1",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "firmwareImage" : "C+7xHgEAADwABAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQAAP//ut3K/gBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==",
                  "firmwareVersion" : "00000000",
                  "deviceIdList" : "00-DB-12-34-56-78-90-A0,00-DB-12-34-56-78-90-A1,00-DB-12-34-56-78-90-A2"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/11.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 11.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 11.2 (Read Firmware Version) to be processed\nby the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv11.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_11_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "11.2",
                  "srv" : "11.2",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/11.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 11.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 11.3 (Activate Firmware) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv11.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_11_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "11.3",
                  "srv" : "11.3",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "firmwareHash" : "AA758690730934FF0685AA758690730934FF0685657788990011223344556677"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/12.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 12.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 12.1 (Request WAN Matrix) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv12.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_12_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "12.1",
                  "srv" : "12.1",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "partialAddress" : {
                    "postCode" : "M22 0RR",
                    "addressIdentifier" : "Threapwood Road"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/12.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 12.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 12.2 (Device Pre-notification) to be processed\nby the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv12.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_12_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "12.2",
                  "srv" : "12.2",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A0",
                  "deviceManufacturer" : "AB01",
                  "deviceModel" : "010A030B",
                  "deviceType" : "ESME",
                  "smetschtsVersion" : "SMETS V1.58",
                  "firmwareVersion" : "0002012F",
                  "esmeVariant" : "AD"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/14.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 14.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 14.1 (Record Network Data (GAS)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv14.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_14_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1200,
                  "sr" : "14.1",
                  "srv" : "14.1",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/2.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 2.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 2.1 (Update Prepay Configuration) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv2.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_2_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1004,
                  "sr" : "2.1",
                  "srv" : "2.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "updatePrepayConfigElectricity" : {
                    "debtRecoveryRateCap" : 30,
                    "emergencyCreditLimit" : 300000,
                    "emergencyCreditThreshold" : 100000,
                    "lowCreditThreshold" : 200000,
                    "electricityNonDisablementCalendar" : {
                      "electricitySpecialDays" : [ {
                        "index" : 1,
                        "date" : {
                          "month" : "07",
                          "dayOfMonth" : "29"
                        }
                      }, {
                        "index" : 2,
                        "date" : {
                          "month" : "08",
                          "dayOfMonth" : "25"
                        }
                      }, {
                        "index" : 3,
                        "date" : {
                          "month" : "09",
                          "dayOfMonth" : "06"
                        }
                      }, {
                        "index" : 4,
                        "date" : {
                          "month" : "10",
                          "dayOfMonth" : "05"
                        }
                      }, {
                        "index" : 5,
                        "date" : {
                          "month" : "08",
                          "dayOfMonth" : "15"
                        }
                      } ],
                      "electricityNonDisablementSchedule" : [ {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "00:00:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "09:30:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "22:00:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "00:00:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "07:30:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "20:00:00.00Z",
                          "startDate" : "2014-10-27Z",
                          "endDate" : "2015-03-28Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "00:00:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "09:30:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "22:00:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "00:00:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "07:30:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ ],
                        "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "20:00:00.00Z",
                          "startDate" : "65535-04-29Z",
                          "endDate" : "65535-07-25Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ {
                          "specialDayId" : 1
                        }, {
                          "specialDayId" : 2
                        }, {
                          "specialDayId" : 5
                        } ],
                        "daysOfWeekApplicability" : [ ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "00:00:00.00Z",
                          "startDate" : "65535-07-26Z",
                          "endDate" : "65535-08-31Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ {
                          "specialDayId" : 1
                        }, {
                          "specialDayId" : 2
                        }, {
                          "specialDayId" : 5
                        } ],
                        "daysOfWeekApplicability" : [ ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "19:00:00.00Z",
                          "startDate" : "65535-07-26Z",
                          "endDate" : "65535-08-31Z"
                        }
                      }, {
                        "nonDisablementScript" : "START",
                        "specialDaysApplicability" : [ {
                          "specialDayId" : 3
                        }, {
                          "specialDayId" : 4
                        } ],
                        "daysOfWeekApplicability" : [ ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "01:15:00.00Z",
                          "startDate" : "65535-09-01Z",
                          "endDate" : "65535-10-26Z"
                        }
                      }, {
                        "nonDisablementScript" : "STOP",
                        "specialDaysApplicability" : [ {
                          "specialDayId" : 3
                        }, {
                          "specialDayId" : 4
                        } ],
                        "daysOfWeekApplicability" : [ ],
                        "scheduleDatesAndTime" : {
                          "switchTime" : "18:45:00.00Z",
                          "startDate" : "65535-09-01Z",
                          "endDate" : "65535-10-26Z"
                        }
                      } ]
                    },
                    "maxMeterBalance" : 5000000,
                    "maxCreditThreshold" : 1000000
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/2.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 2.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 2.2 (Top Up Device) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv2.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_2_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 12884901888,
                  "sr" : "2.2",
                  "srv" : "2.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "utrn" : "73946144332040217315"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/2.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 2.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 2.3 (Update Debt) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv2.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_2_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "2.3",
                  "srv" : "2.3",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "timeDebtRegister1" : 30000,
                  "timeDebtRegister2" : 15000,
                  "paymentDebtRegister" : 50000,
                  "debtRecoveryPerPayment" : 1000,
                  "elecDebtRecovery1" : {
                    "debtRecoveryRate" : 3,
                    "debtRecoveryRatePriceScale" : -1,
                    "debtRecoveryRatePeriod" : "DAILY"
                  },
                  "elecDebtRecovery2" : {
                    "debtRecoveryRate" : 15,
                    "debtRecoveryRatePriceScale" : -1,
                    "debtRecoveryRatePeriod" : "DAILY"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/2.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 2.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 2.5 (Activate Emergency Credit) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv2.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_2_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "2.5",
                  "srv" : "2.5",
                  "cv" : 4
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/3.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 3.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 3.1 (Display Message) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv3.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_3_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "3.1",
                  "srv" : "3.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "supplierMessage" : "Reset"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/3.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 3.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 3.2 (Restrict Access For Change Of Tenancy) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv3.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_3_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "3.2",
                  "srv" : "3.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "restrictionDateTime" : "2014-03-27T15:45:32.00Z"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/3.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 3.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 3.3 (Clear Event Log) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv3.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_3_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "3.3",
                  "srv" : "3.3",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "esmeEventLogType" : "ESME"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/3.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 3.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 3.4 (Update Supplier Name) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv3.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_3_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "3.4",
                  "srv" : "3.4",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "supplierName" : "E-ON",
                  "supplierTelephoneNumber" : "0333 202 4650"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/3.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 3.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 3.5 (Disable Privacy PIN) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv3.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_3_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "3.5",
                  "srv" : "3.5",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.1.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.1.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.1.1 (Read Instantaneous Import Registers) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.1.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_1_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "4.1",
                  "srv" : "4.1.1",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.1.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.1.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.1.2 (Read Instantaneous Import TOU Matrices)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.1.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_1_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.1",
                  "srv" : "4.1.2",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.1.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.1.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.1.3 (Read Instantaneous Import TOU With\nBlocks Matrices) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.1.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_1_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.1",
                  "srv" : "4.1.3",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.1.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.1.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.1.4 (Read Instantaneous Import Block\nCounters) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.1.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_1_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1000,
                  "sr" : "4.1",
                  "srv" : "4.1.4",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.10" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.10.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.10 (Read Network Data) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.10",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_10_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "4.10",
                  "srv" : "4.10",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-29T23:59:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.11.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.11.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.11.1 (Read Tariff (Primary Element)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.11.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_11_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "4.11",
                  "srv" : "4.11.1",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.11.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.11.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.11.2 (Read Tariff (Secondary Element)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.11.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_11_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "4.11",
                  "srv" : "4.11.2",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.12.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.12.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.12.1 (Read Maximum Demand Import Registers)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.12.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_12_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "4.12",
                  "srv" : "4.12.1",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.12.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.12.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.12.2 (Read Maximum Demand Export Registers)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.12.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_12_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "4.12",
                  "srv" : "4.12.2",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.13" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.13.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.13 (Read Prepayment Configuration) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.13",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_13_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.13",
                  "srv" : "4.13",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.14" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.14.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.14 (Read Prepayment Daily Read Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.14",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_14_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1004,
                  "sr" : "4.14",
                  "srv" : "4.14",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-25T23:30:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  },
                  "kaPublicSecurityCredentials" : "MIIBkjCCATigAwIBAgIQOzYmV3Meayu+B4ZQz6FPFTAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMDMwMDAwMDAwWhcNMjUxMDI5MjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEknT/+KOvVtawFtOo+mDaPleVUespWBnIDrekPzByKyJVBCheSlF2uWM027cuoM/AycbkCgrjwok3w0JY8OhAuqNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhAW4xiaH2PcDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSAAwRQIgFr/75lBWSxc8gzYM2B2KIo9qDgZml43a49UDQDJxy9cCIQCcncpTfMwNiHEJMBqualHKnx28X5I+HWDdRugWzqYbDA=="
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.15" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.15.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.15 (Read Load Limit Data) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.15",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_15_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.15",
                  "srv" : "4.15",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.16" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.16.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.16 (Read Active Power Import) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.16",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_16_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "4.16",
                  "srv" : "4.16",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.17" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.17.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.17 (Retrieve Daily Consumption Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.17",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_17_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A3",
                  "originatorCounter" : 1003,
                  "sr" : "4.17",
                  "srv" : "4.17",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-10T00:00:00.00Z",
                    "endDateTime" : "2014-12-20T00:00:00.00Z"
                  },
                  "kaPublicSecurityCredentials" : "MIIBkjCCATigAwIBAgIQOzYmV3Meayu+B4ZQz6FPFTAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMDMwMDAwMDAwWhcNMjUxMDI5MjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEknT/+KOvVtawFtOo+mDaPleVUespWBnIDrekPzByKyJVBCheSlF2uWM027cuoM/AycbkCgrjwok3w0JY8OhAuqNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhAW4xiaH2PcDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSAAwRQIgFr/75lBWSxc8gzYM2B2KIo9qDgZml43a49UDQDJxy9cCIQCcncpTfMwNiHEJMBqualHKnx28X5I+HWDdRugWzqYbDA=="
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.18" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.18.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.18 (Read Meter Balance) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.18",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_18_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.18",
                  "srv" : "4.18",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.2 (Read Instantaneous Export Registers) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "4.2",
                  "srv" : "4.2",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.3 (Read Instantaneous Prepay Values) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "4.3",
                  "srv" : "4.3",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.4.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.4.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.4.2 (Retrieve Change Of Mode / Tariff\nTriggered Billing Data Log) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.4.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_4_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "4.4",
                  "srv" : "4.4.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-10-02T09:00:00.00Z",
                    "endDateTime" : "2015-03-01T09:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.4.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.4.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.4.3 (Retrieve Billing Calendar Triggered\nBilling Data Log) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.4.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_4_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "4.4",
                  "srv" : "4.4.3",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-11-02T09:00:00.00Z",
                    "endDateTime" : "2015-03-01T09:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.4.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.4.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.4.4 (Retrieve Billing Data Log (Payment\nBased Debt Payments)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.4.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_4_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "4.4",
                  "srv" : "4.4.4",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-22T09:30:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.4.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.4.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.4.5 (Retrieve Billing Data Log (Prepayment\nCredits)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.4.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_4_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "4.4",
                  "srv" : "4.4.5",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-27T09:00:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.6.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.6.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.6.1 (Retrieve Import Daily Read Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.6.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_6_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1004,
                  "sr" : "4.6",
                  "srv" : "4.6.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-03-09T00:00:00.00Z",
                    "endDateTime" : "2014-03-11T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.6.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.6.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.6.2 (Retrieve Export Daily Read Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.6.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_6_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "4.6",
                  "srv" : "4.6.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-11-30T09:00:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.8.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.8.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.8.1 (Read Active Import Profile Data) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.8.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_8_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "4.8",
                  "srv" : "4.8.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-31T00:00:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.8.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.8.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.8.2 (Read Reactive Import Profile Data) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.8.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_8_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "4.8",
                  "srv" : "4.8.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-10-01T09:00:00.00Z",
                    "endDateTime" : "2014-10-02T09:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/4.8.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 4.8.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 4.8.3 (Read Export Profile Data) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv4.8.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_4_8_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1201,
                  "sr" : "4.8",
                  "srv" : "4.8.3",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-10-01T09:30:00.00Z",
                    "endDateTime" : "2014-10-02T09:30:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/5.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 5.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 5.1 (Create Schedule) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv5.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_5_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "5.1",
                  "srv" : "5.1",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "scheduleFrequency" : "Daily",
                  "scheduleStartDate" : "2015-01-02",
                  "dspScheduledServiceReference" : "4.6",
                  "dspScheduledServiceReferenceVariant" : "4.6.1",
                  "deviceId" : "00-DB-12-34-56-78-90-A0",
                  "dspRetrieveImportDailyReadLog" : {
                    "startDateOffset" : -1,
                    "startTime" : "00:00:00.00Z",
                    "endDateOffset" : 0,
                    "endTime" : "00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/5.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 5.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 5.2 (Read Schedule) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv5.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_5_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "5.2",
                  "srv" : "5.2",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "dspScheduleId" : 123
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/5.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 5.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 5.3 (Delete Schedule) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv5.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_5_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "5.3",
                  "srv" : "5.3",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "dspScheduleId" : 123
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.11" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.11.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.11 (Synchronise Clock) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.11",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_11_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.11",
                  "srv" : "6.11",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "currentDateTime" : "2014-12-31T23:59:10.00Z",
                  "tolerancePeriod" : 60
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.12" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.12.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.12 (Update Device Configuration\n(Instantaneous Power Threshold)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.12",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_12_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.12",
                  "srv" : "6.12",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "lowMediumPowerThreshold" : 2300,
                  "mediumHighPowerThreshold" : 4600
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.13" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.13.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.13 (Read Event Or Security Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.13",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_13_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1002,
                  "sr" : "6.13",
                  "srv" : "6.13",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-31T00:00:00.00Z",
                    "endDateTime" : "2030-01-01T00:00:00.00Z"
                  },
                  "logToRead" : "Event"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.14.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.14.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.14.1 (Update Device Configuration (Auxiliary\nLoad Control Description)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.14.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_14_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.14",
                  "srv" : "6.14.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "alcshcalcsDescription" : [ {
                    "index" : 1,
                    "switchDescription" : "ALCS_1_Description"
                  }, {
                    "index" : 2,
                    "switchDescription" : "HCALCS_2_Description"
                  }, {
                    "index" : 3,
                    "switchDescription" : "ALCS_3_Description"
                  }, {
                    "index" : 4,
                    "switchDescription" : "ALCS_4_Description"
                  }, {
                    "index" : 5,
                    "switchDescription" : "ALCS_5_Description"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.14.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.14.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.14.2 (Update Device Configuration (Auxiliary\nLoad Control Scheduler)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.14.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_14_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1007,
                  "sr" : "6.14",
                  "srv" : "6.14.2",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "alcshcalcsConnectionSchedule" : [ {
                    "activateDeactivateSwitch" : {
                      "index" : 1,
                      "activateSwitch" : true
                    },
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "06:00:00.00Z",
                      "startDate" : { },
                      "endDate" : { }
                    }
                  }, {
                    "activateDeactivateSwitch" : {
                      "index" : 1,
                      "deactivateSwitch" : true
                    },
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "10:00:00.00Z",
                      "startDate" : { },
                      "endDate" : { }
                    }
                  }, {
                    "activateDeactivateSwitch" : {
                      "index" : 2,
                      "activateSwitch" : true
                    },
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "17:00:00.00Z",
                      "startDate" : {
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "month" : "09",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "activateDeactivateSwitch" : {
                      "index" : 2,
                      "deactivateSwitch" : true
                    },
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "21:00:00.00Z",
                      "startDate" : {
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "month" : "09",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "activateDeactivateSwitch" : {
                      "index" : 2,
                      "activateSwitch" : true
                    },
                    "specialDaysApplicability" : [ {
                      "index" : 1
                    }, {
                      "index" : 2
                    }, {
                      "index" : 3
                    }, {
                      "index" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "13:00:00.00Z",
                      "startDate" : {
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "month" : "09",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "activateDeactivateSwitch" : {
                      "index" : 2,
                      "deactivateSwitch" : true
                    },
                    "specialDaysApplicability" : [ {
                      "index" : 1
                    }, {
                      "index" : 2
                    }, {
                      "index" : 3
                    }, {
                      "index" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Saturday", "Sunday" ],
                    "alcsScheduleDatesAndTime" : {
                      "switchTime" : "21:00:00.00Z",
                      "startDate" : {
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "month" : "09",
                        "dayOfMonth" : "21"
                      }
                    }
                  } ],
                  "alcshcalcsSpecialDays" : [ {
                    "index" : 1,
                    "month" : "12",
                    "dayOfMonth" : "25"
                  }, {
                    "index" : 2,
                    "month" : "12",
                    "dayOfMonth" : "26"
                  }, {
                    "index" : 3,
                    "year" : "2015",
                    "month" : "04",
                    "dayOfMonth" : "03"
                  }, {
                    "index" : 4,
                    "year" : "2015",
                    "month" : "08",
                    "dayOfMonth" : "31"
                  } ],
                  "switchTypeAndId" : [ {
                    "index" : 1,
                    "alcs" : true
                  }, {
                    "index" : 2,
                    "hcalcs" : "00-DB-12-34-56-78-90-97"
                  }, {
                    "index" : 3,
                    "alcs" : true
                  }, {
                    "index" : 4,
                    "alcs" : true
                  }, {
                    "index" : 5,
                    "alcs" : true
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.14.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.14.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.14.3 (Update Device Configuration (Auxiliary\nController Scheduler)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.14.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_14_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A6",
                  "originatorCounter" : 1002,
                  "sr" : "6.14",
                  "srv" : "6.14.3",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-04-01T09:00:00.00Z",
                  "auxiliaryControllerSchedule" : [ {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 1,
                      "commandedStateLevel" : 0
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "09:00:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 1,
                      "commandedStateLevel" : 50
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 3
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "09:30:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 2,
                      "commandedStateLevel" : 0
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "10:00:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 2,
                      "commandedStateLevel" : 50
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "10:30:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 3,
                      "commandedStateLevel" : 0
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "11:00:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 3,
                      "commandedStateLevel" : 50
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "11:30:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 4,
                      "commandedStateLevel" : 0
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "12:00:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 4,
                      "commandedStateLevel" : 50
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    }, {
                      "identifier" : 4
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "12:30:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 5,
                      "commandedStateLevel" : 0
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "13:00:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  }, {
                    "auxiliaryControllerAction" : {
                      "auxiliaryControllerN" : 5,
                      "commandedStateLevel" : 50
                    },
                    "specialDaysApplicability" : [ {
                      "identifier" : 1
                    }, {
                      "identifier" : 2
                    }, {
                      "identifier" : 3
                    } ],
                    "daysOfWeekApplicability" : [ "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" ],
                    "auxiliaryControllerSchedulePeriodAndTime" : {
                      "switchTime" : "13:30:00.00Z",
                      "startDate" : {
                        "year" : "2015",
                        "month" : "06",
                        "dayOfMonth" : "21"
                      },
                      "endDate" : {
                        "year" : "2015",
                        "month" : "12",
                        "dayOfMonth" : "21"
                      }
                    }
                  } ],
                  "auxiliaryControllerSpecialDayDefinitions" : [ {
                    "identifier" : 1,
                    "month" : "12",
                    "dayOfMonth" : "25"
                  }, {
                    "identifier" : 2,
                    "month" : "12",
                    "dayOfMonth" : "26"
                  }, {
                    "identifier" : 3,
                    "year" : "2015",
                    "month" : "04",
                    "dayOfMonth" : "03"
                  }, {
                    "identifier" : 4,
                    "year" : "2015",
                    "month" : "08",
                    "dayOfMonth" : "31"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.15.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.15.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.15.1 (Update Security Credentials (KRP)) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.15.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_15_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.15",
                  "srv" : "6.15.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T00:00:00.00Z",
                  "remotePartyRole" : "Supplier",
                  "remotePartyFloorSeqNumber" : 0,
                  "remotePartyPrepaymentTopUpFloorSeqNumber" : 0,
                  "replacementCertificates" : {
                    "supplierOrNetworkOperatorCertificates" : {
                      "digitalSigningCertificate" : "MIIBrDCCAVKgAwIBAgIQSge8AdklO1H68B9+x9pbLzAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTYwMTEwMDAwMDAwWhcNMjYwMTA5MjM1OTU5WjA7MRgwFgYDVQQDDA9HSVRURVNUU1VQUExJRVIxCzAJBgNVBAsMAjAyMRIwEAYDVQQtAwkAkLPVHzABAAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAT6b7/6HJpOQvSjzWWfO+uQoxtWWu17p5F3SLpoT+TGACE8vp0lgh+ngNlHuXXJMPN3q6EhApAEQmR6maNlIIiwo1kwVzAOBgNVHQ8BAf8EBAMCB4AwEQYDVR0OBAoECEMEa0+3xPEbMB0GA1UdIAEB/wQTMBEwDwYNKoY6AAGEj7kPAQIBBDATBgNVHSMEDDAKgAhPVojX7JM74jAKBggqhkjOPQQDAgNIADBFAiEAvXvJRsABv/3nyEO/DVW5np3WTPuHhsJQfc4fIpxRBmUCIH+0LzbjIIn8tTVK5fnRmV/wHfG0cjU7E6excCnrDULy",
                      "keyAgreementCertificate" : "MIIBkTCCATigAwIBAgIQUte4oQnybYmM6CHDKHj2GDAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTYwMTEwMDAwMDAwWhcNMjYwMTA5MjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEartih5c6NPj1TVj7+Sopio293w80a1XJHh3y3EuOK9or5JldH0gboZ+lk7E/3NDXphROJ6Sj5ERjxV91WzBrCKNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhClmfBuLseNDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDRwAwRAIge1YK/quODMW7pXRwjhVjnVvAT99g++ZXsufFNqU6k+ECIHbJPRLidSgI+UjpVJs+xwJUBcqOEEI+x6v57e19MFS6",
                      "keyAgreementTopUpCertificate" : "MIIBkjCCATigAwIBAgIQW8L02TScXg8t6Xi9vkdv5jAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTYwMTEwMDAwMDAwWhcNMjYwMTA5MjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEXHaD8BXdbeut50JdNAjFN1P06wpoVg6GlBK/QJ+eXYG5LYruMpGn22LwdKdeAbYwXLfg/75cxjMNMHkrFEwNrKNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhOsHobyg3VjDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSAAwRQIhAPz7W8jxowCg3Dme4G9e65HvJ/7nS1MIF8NW4bwEorR/AiBE+a/NnSBwzn79AcdRZFvLe0ZwYcAs/u2/PnAPVh/F9g=="
                    }
                  },
                  "certificationPathCertificates" : [ "MIIBoDCCAUWgAwIBAgIQcYcr28gnibwUAc4BugatozAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwMDELMAkGA1UEAxMCWkEwHhcNMTUxMDI5MDAwMDAwWhcNNDAxMDI4MjM1OTU5WjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQaK5JAl7WNcLDCz3TrodKm8darVpVTQ/EylGjGQyf8/iiHa1YMtceDpXIv07nr2POilEHZz/QlVKyod440dBzVo20wazAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEQYDVR0OBAoECE9WiNfskzviMBMGA1UdIwQMMAqACEjPGzJpfEZpMAoGCCqGSM49BAMCA0kAMEYCIQD83y6WgCXi6PjTU0iNp2fezAqqPIqGsn3cE/ZfMhYytQIhAK4xYtS/yR0FumzGtt5GaOqSkd6Pssbht0tOjQxrq8dq" ],
                  "applyTimeBasedCpvChecks" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.15.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.15.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.15.2 (Update Security Credentials (Device))\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.15.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_15_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.15",
                  "srv" : "6.15.2",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "deviceCertificate" : "MIIBoTCCAUagAwIBAgIQMDmCNnRNnaDlf410rgQfzTAKBggqhkjOPQQDAjAPMQ0wCwYDVQQDEwRFMzU3MCAXDTE2MDQwNjAwMDAwMFoYDzk5OTkxMjMxMjM1OTU5WjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE9BKENipage7/hIri20xtDfM28GEo6zISFZb674bbOD2Tw5Uuc0dgNkBtkQCfYTMkQQKp+Io2gvFvksy/fMlZ+qOBkDCBjTAOBgNVHQ8BAf8EBAMCB4AwEQYDVR0OBAoECEGXi6kMBm/6MDUGA1UdEQEB/wQrMCmgJwYIKwYBBQUHCASgGzAZBg0qhjoAAYSPuQ8BAgIBBAgA2xI0VniQoDAcBgNVHSABAf8EEjAQMA4GDCqGOgAB7e5AAQIBBDATBgNVHSMEDDAKgAhH1ArzQSkEoDAKBggqhkjOPQQDAgNJADBGAiEAlc4djr7rgYzegtTuwXDnKhAe8LkGTlO1UXbyPSjVdbcCIQCBuEZeNdHRxAP3YWvDkWNr3z6nKima0M49Hshw6FW7gg=="
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.17" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.17.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.17 (Issue Security Credentials) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.17",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_17_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.17",
                  "srv" : "6.17",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "credentialType" : "Digital Signature"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.18.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.18.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.18.1 (Set Maximum Demand Configurable Time\nPeriod) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.18.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_18_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1203,
                  "sr" : "6.18",
                  "srv" : "6.18.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "maximumDemandTimePeriodSchedule" : {
                    "startTime" : "17:00:00.00Z",
                    "endTime" : "22:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.18.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.18.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.18.2 (Reset Maximum Demand Registers) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.18.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_18_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "6.18",
                  "srv" : "6.18.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "maxDemandActivePowerImportValue" : true,
                  "maxDemandActivePowerExportValue" : true,
                  "maxDemandConfigTimeActivePowerImportValue" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.1 (Read Device Configuration (Voltage)) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.2",
                  "srv" : "6.2.1",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.10" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.10.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.10 (Read Device Configuration (Event and\nAlert Behaviours)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.10",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_10_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.2",
                  "srv" : "6.2.10",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.2 (Read Device Configuration\n(Randomisation)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.2",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.3 (Read Device Configuration (Billing\nCalendar)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.3",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.4 (Read Device Configuration (Identity Exc\nMpxN)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.4",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.5 (Read Device Configuration\n(Instantaneous Power Thresholds)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.2",
                  "srv" : "6.2.5",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.7" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.7.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.7 (Read Device Configuration (MpxN)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_7_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.7",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.8" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.8.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.8 (Read Device Configuration (Gas)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.8",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_8_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.8",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.2.9" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.2.9.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.2.9 (Read Device Configuration (Payment\nMode)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.2.9",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_2_9_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.2",
                  "srv" : "6.2.9",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.20.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.20.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.20.1 (Set Device Configuration (Import\nMPxN)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.20.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_20_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "6.20",
                  "srv" : "6.20.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "importMpans" : {
                    "importMpan" : "1312345678111",
                    "secondaryImportMpan" : "1312345678222"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.20.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.20.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.20.2 (Set Device Configuration (Export\nMPAN)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.20.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_20_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.20",
                  "srv" : "6.20.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "exportMpan" : "1312345678333"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.21" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.21.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.21 (Request Handover Of DCC Controlled\nDevice) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.21",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_21_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A3",
                  "originatorCounter" : 1000,
                  "sr" : "6.21",
                  "srv" : "6.21",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "remotePartyRole" : "Supplier",
                  "remotePartyFloorSeqNumber" : 0,
                  "remotePartyPrepaymentTopUpFloorSeqNumber" : 0,
                  "replacementCertificates" : {
                    "digitalSigningCertificate" : "MIIBrDCCAVKgAwIBAgIQT7xSUgGh11hsG8HEc03rnzAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMDMwMDAwMDAwWhcNMjUxMDI5MjM1OTU5WjA7MRgwFgYDVQQDDA9HSVRURVNUU1VQUExJRVIxCzAJBgNVBAsMAjAyMRIwEAYDVQQtAwkAkLPVHzABAAAwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQwwqtaDRMXJv+9qA55KUzDdTRDKj5CRAW5ejq6D/x53OcpslF1Y8t9lYJ+TFC0jLo9h9WJPFG5bYfDReNxf4weo1kwVzAOBgNVHQ8BAf8EBAMCB4AwEQYDVR0OBAoECESJl5LRlvS4MB0GA1UdIAEB/wQTMBEwDwYNKoY6AAGEj7kPAQIBBDATBgNVHSMEDDAKgAhPVojX7JM74jAKBggqhkjOPQQDAgNIADBFAiEA39CQ51c+r1+oLhqn242f7VEYObV1LVXRAJHyUP3xiiICIF637Dax9BM+UVV9M7WcSe9rvRDpqksdzZKOZbPprdHF",
                    "keyAgreementCertificate" : "MIIBkjCCATigAwIBAgIQOzYmV3Meayu+B4ZQz6FPFTAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMDMwMDAwMDAwWhcNMjUxMDI5MjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEknT/+KOvVtawFtOo+mDaPleVUespWBnIDrekPzByKyJVBCheSlF2uWM027cuoM/AycbkCgrjwok3w0JY8OhAuqNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhAW4xiaH2PcDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSAAwRQIgFr/75lBWSxc8gzYM2B2KIo9qDgZml43a49UDQDJxy9cCIQCcncpTfMwNiHEJMBqualHKnx28X5I+HWDdRugWzqYbDA==",
                    "keyAgreementTopUpCertificate" : "MIIBkzCCATigAwIBAgIQcDczd07yuOUPevK7szwZjzAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMTA0MDAwMDAwWhcNMjUxMTAzMjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAQAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEBdlFPNkJJ5oRxNm79XNExB6cOd8TjQtI4FMz2x4Kl/LffrimvSIrn2vr0Kq4aszgu6jcq+8Q878V+lBXx2PkIaNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhB+0kiFYjFcDAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSQAwRgIhAKRUHa7X2ceF+xwME/Y8HsXpO+8a/OSF3GL2u2GA6lJVAiEAsrkZVMUmMEmApGXZqP5Zz4Ym2IQzloJfAhwaeURYKEs="
                  },
                  "certificationPathCertificates" : [ "MIIBoDCCAUWgAwIBAgIQcYcr28gnibwUAc4BugatozAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwMDELMAkGA1UEAxMCWkEwHhcNMTUxMDI5MDAwMDAwWhcNNDAxMDI4MjM1OTU5WjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQaK5JAl7WNcLDCz3TrodKm8darVpVTQ/EylGjGQyf8/iiHa1YMtceDpXIv07nr2POilEHZz/QlVKyod440dBzVo20wazAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEQYDVR0OBAoECE9WiNfskzviMBMGA1UdIwQMMAqACEjPGzJpfEZpMAoGCCqGSM49BAMCA0kAMEYCIQD83y6WgCXi6PjTU0iNp2fezAqqPIqGsn3cE/ZfMhYytQIhAK4xYtS/yR0FumzGtt5GaOqSkd6Pssbht0tOjQxrq8dq" ],
                  "applyTimeBasedCpvChecks" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.22" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.22.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.22 (Configure Alert Behaviour) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.22",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_22_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1000,
                  "sr" : "6.22",
                  "srv" : "6.22",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "gasSupplierAlertEventSettings" : {
                    "x810E" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Disable",
                      "alarm" : "Disable"
                    },
                    "x8161" : {
                      "wanAlert" : "Disable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x8162" : {
                      "wanAlert" : "Disable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81AA" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Enable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81AB" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Enable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81BD" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81BE" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81BF" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81C0" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81C4" : {
                      "wanAlert" : "Enable",
                      "hanAlert" : "Enable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    },
                    "x81C6" : {
                      "wanAlert" : "Disable",
                      "hanAlert" : "Disable",
                      "eventLog" : "Enable",
                      "alarm" : "Enable"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.23" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.23.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.23 (Update Security Credentials (CoS)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.23",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_23_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1007,
                  "sr" : "6.23",
                  "srv" : "6.23",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-02T00:00:00.00Z",
                  "supplierFloorSeqNumber" : 0,
                  "supplierPrepaymentTopUpFloorSeqNumber" : 0,
                  "supplierReplacementCertificates" : {
                    "digitalSigningCertificate" : "MIIBrTCCAVOgAwIBAgIQOer/AFXOTa8IWsh0x8hL0zAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMjIzMDAwMDAwWhcNMjUxMjIyMjM1OTU5WjA8MRkwFwYDVQQDDBBHSVRURVNUU1VQUExJRVIyMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAwAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEn25fipmfeUB1O9U0ZRvF/JvjOnNzdjCh9wCvpR/YzfObiVz54K8SvObuDMllD1+1s1wizNhqmEXPT96b0vGrI6NZMFcwDgYDVR0PAQH/BAQDAgeAMBEGA1UdDgQKBAhKgQOtrBg6iTAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSAAwRQIgFbzfb/3wBSbQ1Zw178mNWRTU2KSXCj928cKxRywtYCgCIQDlJuTXQ40raYPpniZV3rBvIqDUnoBnFnHLYcFMXDMIJg==",
                    "keyAgreementCertificate" : "MIIBkzCCATigAwIBAgIQLArFW0bLQQ50CdP9p2LDCzAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMjIzMDAwMDAwWhcNMjUxMjIyMjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAwAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEaz1H7skMWTzIBGaKNcYgnuFO7unTVDUTLnzUybjflIceYPQtGopF3GJ08a2ybhHPQRDir7lVSXDY6VXqoSeB2qNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhIOXJUfc14NTAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDSQAwRgIhAILpKPMJpR5IDwA0DdI+Mjv+qilU4/fPBxxLS5hQt8jwAiEA0pbkRnshCXIwLqCvBsRtONnZujK2E9VVBFQdtQ/UIac=",
                    "keyAgreementTopUpCertificate" : "MIIBkTCCATigAwIBAgIQMOEiKM7eygTekaglsiznQDAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTUxMjIzMDAwMDAwWhcNMjUxMjIyMjM1OTU5WjAhMQswCQYDVQQLDAIwMjESMBAGA1UELQMJAJCz1R8wAwAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE97wfuYkqr8DKWK5Y0kJRZtC2AT9u4Z+WWACTf9cqgATBqxc14XUkxzuHpCIUIiQDMms6n2YmEypDQUNDXClQiaNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhDBJRS/h/OCjAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDRwAwRAIgSH030DaEknRgEoCgaPEHr+R42SudsPzhOzwiQJQ2ilICIC7FW6/9BECRGHxvkK3CvCexpdaGrgyVNMVDo7WOIMGN"
                  },
                  "certificationPathCertificates" : [ "MIIBoDCCAUWgAwIBAgIQcYcr28gnibwUAc4BugatozAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwMDELMAkGA1UEAxMCWkEwHhcNMTUxMDI5MDAwMDAwWhcNNDAxMDI4MjM1OTU5WjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQaK5JAl7WNcLDCz3TrodKm8darVpVTQ/EylGjGQyf8/iiHa1YMtceDpXIv07nr2POilEHZz/QlVKyod440dBzVo20wazAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEQYDVR0OBAoECE9WiNfskzviMBMGA1UdIwQMMAqACEjPGzJpfEZpMAoGCCqGSM49BAMCA0kAMEYCIQD83y6WgCXi6PjTU0iNp2fezAqqPIqGsn3cE/ZfMhYytQIhAK4xYtS/yR0FumzGtt5GaOqSkd6Pssbht0tOjQxrq8dq" ],
                  "applyTimeBasedCpvChecks" : true,
                  "importMpxn" : "1312345678333"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.24.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.24.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.24.1 (Retrieve Device Security Credentials\n(KRP)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.24.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_24_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.24",
                  "srv" : "6.24.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "remotePartyRole" : [ "Supplier", "NetworkOperator" ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.24.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.24.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.24.2 (Retrieve Device Security Credentials\n(Device)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.24.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_24_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.24",
                  "srv" : "6.24.2",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "credentialType" : "Digital Signature"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.25" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.25.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.25 (Set Electricity Supply Tamper State) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.25",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_25_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.25",
                  "srv" : "6.25",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "supplyTamperState" : "Locked"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.26" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.26.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.26 (Update Device Configuration (daily\nresetting of Tariff Block Counter Matrix)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.26",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_26_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.26",
                  "srv" : "6.26",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "dailyTariffBlockCounterMatrixReset" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.27" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.27.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.27 (Update Device Configuration (RMS Voltage\nCounter Reset)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.27",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_27_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1200,
                  "sr" : "6.27",
                  "srv" : "6.27",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.28" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.28.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.28 (Set CHF Sub GHz Configuration) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.28",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_28_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1000,
                  "sr" : "6.28",
                  "srv" : "6.28",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "lowerBandSubGhzChannels0To26" : {
                    "channel1" : true,
                    "channel2" : true
                  },
                  "lowerBandSubGhzChannels27To34" : {
                    "channel28" : true,
                    "channel29" : true
                  },
                  "lowerBandSubGhzChannels35To61" : {
                    "channel36" : true,
                    "channel37" : true
                  },
                  "upperBandSubGhzChannels0To26" : {
                    "channel1" : true,
                    "channel2" : true
                  },
                  "normalLimitedDutyCycleThreshold" : 1.3,
                  "limitedCriticalDutyCycleThreshold" : 2.2,
                  "maximumSubGhzChannelChangesPerWeek" : 5,
                  "gsmeCurfew" : 7,
                  "channelQuieterThreshold" : 7,
                  "channelNoisierThreshold" : 12,
                  "nonGsmePoorCommsPercentageThreshold" : 60.0,
                  "nonGsmePoorCommsMeasurementPeriods" : 130,
                  "localChNoiseMeasurementPeriod" : 100,
                  "localChFailurePercentage" : 40.0,
                  "localChRetryPercentage" : 30.0
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.29" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.29.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.29 (Request CHF Sub GHz Channel Scan) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.29",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_29_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1000,
                  "sr" : "6.29",
                  "srv" : "6.29",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.30" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.30.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.30 (Read CHF Sub GHz Configuration) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.30",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_30_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1000,
                  "sr" : "6.30",
                  "srv" : "6.30",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.31" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.31.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.31 (Read CHF Sub GHz Channel) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.31",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_31_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1000,
                  "sr" : "6.31",
                  "srv" : "6.31",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.32" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.32.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.32 (Read CHF Sub GHz Channel Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.32",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_32_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1001,
                  "sr" : "6.32",
                  "srv" : "6.32",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-20T00:00:00.00Z",
                    "endDateTime" : "2014-12-31T09:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.4.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.4.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.4.1 (Update Device Configuration (Load\nLimiting General Settings)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.4.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_4_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1004,
                  "sr" : "6.4",
                  "srv" : "6.4.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "executionDateTime" : "2030-01-15T09:00:00.00Z",
                  "loadLimitPeriod" : 300,
                  "loadLimitPowerThreshold" : 6900,
                  "loadLimitRestorationPeriod" : 30,
                  "loadLimitSupplyState" : "Unchanged"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.4.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.4.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.4.2 (Update Device Configuration (Load\nLimiting Counter Reset)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.4.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_4_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "6.4",
                  "srv" : "6.4.2",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.5 (Update Device Configuration (Voltage)) to\nbe processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-02-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1203,
                  "sr" : "6.5",
                  "srv" : "6.5",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "rmsVoltageSettings" : {
                    "rmsExtremeOverVoltageMeasurementPeriod" : 30,
                    "rmsExtremeOverVoltageThreshold" : 287,
                    "rmsExtremeUnderVoltageMeasurementPeriod" : 30,
                    "rmsExtremeUnderVoltageThreshold" : 180,
                    "rmsVoltageSagMeasurementPeriod" : 30,
                    "rmsVoltageSagThreshold" : 216,
                    "rmsVoltageSwellMeasurementPeriod" : 30,
                    "rmsVoltageSwellThreshold" : 253
                  },
                  "polyPhaseVoltageSettings" : [ {
                    "phase" : 1,
                    "phaseVoltageSettings" : {
                      "averageRmsOverVoltageThreshold" : 264,
                      "averageRmsUnderVoltageThreshold" : 200,
                      "averageRmsVoltageMeasurementPeriod" : 30
                    }
                  }, {
                    "phase" : 2,
                    "phaseVoltageSettings" : {
                      "averageRmsOverVoltageThreshold" : 126,
                      "averageRmsUnderVoltageThreshold" : 96,
                      "averageRmsVoltageMeasurementPeriod" : 30
                    }
                  }, {
                    "phase" : 3,
                    "phaseVoltageSettings" : {
                      "averageRmsOverVoltageThreshold" : 126,
                      "averageRmsUnderVoltageThreshold" : 96,
                      "averageRmsVoltageMeasurementPeriod" : 30
                    }
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.6" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.6.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.6 (Update Device Configuration (Gas\nConversion)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_6_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1000,
                  "sr" : "6.6",
                  "srv" : "6.6",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "calorificValue" : 40.0,
                  "conversionFactor" : 1.02264
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.7" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.7.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.7 (Update Device Configuration (Gas Flow))\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_7_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1002,
                  "sr" : "6.7",
                  "srv" : "6.7",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "uncontrolledGasFlowRate" : 61680,
                  "supplyDepletionState" : "Unchanged",
                  "supplyTamperState" : "Unchanged",
                  "stabilisationPeriod" : 60,
                  "measurementPeriod" : 300
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/6.8" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 6.8.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 6.8 (Update Device Configuration (Billing\nCalendar)) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv6.8",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_6_8_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1003,
                  "sr" : "6.8",
                  "srv" : "6.8",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "electricityBillingCalendar" : {
                    "billingTime" : "00:00:00.00Z",
                    "quarterly" : {
                      "dayOfMonth" : "1",
                      "billingPeriodStartMonth" : "1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.1 (Enable Supply) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.1",
                  "srv" : "7.1",
                  "cv" : 4
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.10" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.10.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.10 (Remove Auxiliary Load From Boost Button)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.10",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_10_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "7.10",
                  "srv" : "7.10",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "removeFromBoostButton" : [ {
                    "index" : 1,
                    "value" : true
                  }, {
                    "index" : 2,
                    "value" : true
                  }, {
                    "index" : 3,
                    "value" : true
                  }, {
                    "index" : 4,
                    "value" : true
                  }, {
                    "index" : 5,
                    "value" : true
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.11" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.11.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.11 (Read Boost Button Details) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.11",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_11_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "7.11",
                  "srv" : "7.11",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readLogPeriod" : {
                    "startDateTime" : "2014-12-25T23:00:00.00Z",
                    "endDateTime" : "2015-01-01T00:00:00.00Z"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.12" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.12.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.12 (Set Randomised Offset Limit) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.12",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_12_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "7.12",
                  "srv" : "7.12",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "randomisedOffsetLimit" : 900
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.13" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.13.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.13 (Set Auxiliary Controller State) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.13",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_13_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1006,
                  "sr" : "7.13",
                  "srv" : "7.13",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "auxiliaryControllerN" : 3,
                  "startDateTime" : "2015-01-03T00:00:00.00Z",
                  "endDateTime" : "2015-01-03T01:00:00.00Z",
                  "commandedStateLevel" : 50,
                  "inputFromControlledLoad" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.14" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.14.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.14 (Read Auxiliary Controller Configuration\nData) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.14",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_14_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.14",
                  "srv" : "7.14",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.15" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.15.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.15 (Read Auxiliary Controller Operational\nData) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.15",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_15_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "7.15",
                  "srv" : "7.15",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.16" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.16.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.16 (Limit APC Level) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.16",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_16_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-08",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 9001,
                  "sr" : "7.16",
                  "srv" : "7.16",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "auxiliaryControllerN" : 3,
                  "startDateTime" : "2015-01-03T00:00:00.00Z",
                  "endDateTime" : "2015-01-03T01:00:00.00Z",
                  "commandedStateLevel" : 50,
                  "inputFromControlledLoad" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.2 (Disable Supply) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.2",
                  "srv" : "7.2",
                  "cv" : 4
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.3 (Arm Supply) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.3",
                  "srv" : "7.3",
                  "cv" : 4
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.4 (Read Supply Status) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.4",
                  "srv" : "7.4",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.5 (Activate Auxiliary Load) to be processed\nby the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.5",
                  "srv" : "7.5",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "activateAlcsHcalcs" : {
                    "index" : 1,
                    "duration" : 30
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.6" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.6.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.6 (Deactivate Auxiliary Load) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_6_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "7.6",
                  "srv" : "7.6",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "deactivateAlcsHcalcs" : {
                    "index" : 3,
                    "duration" : 60
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.7" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.7.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.7 (Read Auxiliary Load Switch Data) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_7_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "7.7",
                  "srv" : "7.7",
                  "cv" : 1
                },
                "bodyParameters" : { }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.8" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.8.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.8 (Reset Auxiliary Load) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.8",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_8_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1002,
                  "sr" : "7.8",
                  "srv" : "7.8",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "resetAlcsHcalcs" : {
                    "index" : 5
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/7.9" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 7.9.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 7.9 (Add Auxiliary Load To Boost Button) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv7.9",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_7_9_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "7.9",
                  "srv" : "7.9",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "addToBoostButton" : [ {
                    "index" : 1,
                    "value" : true
                  }, {
                    "index" : 2,
                    "value" : true
                  }, {
                    "index" : 3,
                    "value" : true
                  }, {
                    "index" : 4,
                    "value" : true
                  }, {
                    "index" : 5,
                    "value" : true
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.1.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.1.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.1.1 (Commission Device) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.1.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_1_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "8.1",
                  "srv" : "8.1.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "currentDateTime" : "2014-12-31T23:59:10.00Z",
                  "tolerancePeriod" : 60
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.11" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.11.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.11 (Update HAN Device Log) to be processed\nby the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.11",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_11_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1002,
                  "sr" : "8.11",
                  "srv" : "8.11",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A0",
                  "requestType" : "Add",
                  "addDeviceToChfWhitelist" : {
                    "joinTimePeriod" : 90,
                    "installCode" : "30313233343536373839414243444546",
                    "importMpxn" : "1312345678111",
                    "secondaryImportMpan" : "1312345678222"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.12.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.12.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.12.1 (Restore HAN Device Log) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.12.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_12_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1002,
                  "sr" : "8.12",
                  "srv" : "8.12.1",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "oldChfId" : "00-DB-12-34-56-78-90-95"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.12.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.12.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.12.2 (Restore Gas Proxy Function Device Log)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.12.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_12_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-00-00-02",
                  "target" : "00-DB-12-34-56-78-90-A3",
                  "originatorCounter" : 1300,
                  "sr" : "8.12",
                  "srv" : "8.12.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "oldGpfId" : "00-DB-12-34-56-78-90-B3"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.13" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.13.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.13 (Return Local Command Response) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.13",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_13_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1001,
                  "sr" : "8.13",
                  "srv" : "8.13",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "originalRequestId" : "90-B3-D5-1F-30-01-00-00:00-DB-12-34-56-78-90-A0:1000",
                  "deviceGbcsResponse" : "3wkCAAAAAAAAA+gIANsSNFZ4kKAIkLPVHzABAAAMB98BAf8AAAAAgAD/AgASCzAJAgEABAQxMjM0QKnuN2SSTdcopXqd/Q/dlhD/hr5jjIhQdtE6/tN329Chbx9qrKO9ZYnokZv3qr3UWaKDbKQTopwS2Qr17XcT46Q="
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.14.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.14.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.14.1 (Communications Hub Status Update-\nInstall Success) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.14.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_14_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.14",
                  "srv" : "8.14.1",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A2",
                  "chfInstallType" : "New CHF Install",
                  "mpxn" : "1000999888",
                  "aerialInstall" : true,
                  "chfLocation" : "Basement or Cellar"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.14.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.14.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.14.2 (Communications Hub Status Update -\nInstall No SM WAN) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.14.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_14_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.14",
                  "srv" : "8.14.2",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A2",
                  "chfInstallType" : "CHF Install - no SM WAN",
                  "mpxn" : "1000999888",
                  "aerialInstall" : true,
                  "chfLocation" : "Basement or Cellar",
                  "premiseType" : "Low Rise Apartment (MDU <= 5 floors)",
                  "metalObstructionCheck" : false,
                  "connectivityObstructionCheck" : false,
                  "sharedObstructionCheck" : false
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.14.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.14.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.14.3 (Communications Hub  Status Update. –\nFault Return) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.14.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_14_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.14",
                  "srv" : "8.14.3",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A2",
                  "chfFaultReturnType" : "Fault identified prior to installation",
                  "otherDeviceId" : "00-DB-12-34-56-78-90-A0",
                  "chfConnectionMethod" : "Hot-shoe",
                  "chfFaultReason" : "Damaged case"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.14.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.14.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.14.4 (Communications Hub Status Update – No\nFault Return) to be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.14.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_14_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.14",
                  "srv" : "8.14.4",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A2",
                  "chfNoFaultReturnType" : "No Fault Return (general)"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.2 (Commission Device) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.2",
                  "srv" : "8.2",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A2"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.3" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.3.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.3 (Decommission Device) to be processed by\nthe request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_3_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.3",
                  "srv" : "8.3",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A0"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.4" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.4.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.4 (Update Inventory) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_4_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.4",
                  "srv" : "8.4",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A0",
                  "deleteDevice" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.5" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.5.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.5 (Service Opt Out) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_5_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1005,
                  "sr" : "8.5",
                  "srv" : "8.5",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "executionDateTime" : "2015-01-15T00:00:00.00Z",
                  "acbFloorSeqNumber" : 0,
                  "replacementCertificates" : {
                    "keyAgreementCertificate" : "MIIBkTCCATigAwIBAgIQYwzrYWgvmUGglXQIH2mmtzAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwHhcNMTYwMTEwMDAwMDAwWhcNMjYwMTA5MjM1OTU5WjAhMQswCQYDVQQLDAIwNDESMBAGA1UELQMJAJCz1R8wAAACMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE79ztBYUkjSHmg9Xal0U1d5YlYuHOPNQ5hl+AjeG7kDY8rukg56uA4w2s11d3UlvvOIxioApCmbyVlM+NrBKphKNZMFcwDgYDVR0PAQH/BAQDAgMIMBEGA1UdDgQKBAhIl3cdNPywxjAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEwYDVR0jBAwwCoAIT1aI1+yTO+IwCgYIKoZIzj0EAwIDRwAwRAIgED6ye2PluYiM75ch+RZJozq8MUk6YU/bHZn00+Te1+kCIBu1TY1bkbkFpPKuBsy82Br1WpQF4CrusLoDIv2hU5Be"
                  },
                  "certificationPathCertificates" : [ "MIIBoDCCAUWgAwIBAgIQcYcr28gnibwUAc4BugatozAKBggqhkjOPQQDAjAaMQswCQYDVQQLEwIwMDELMAkGA1UEAxMCWkEwHhcNMTUxMDI5MDAwMDAwWhcNNDAxMDI4MjM1OTU5WjAaMQswCQYDVQQLEwIwNzELMAkGA1UEAxMCWjEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQaK5JAl7WNcLDCz3TrodKm8darVpVTQ/EylGjGQyf8/iiHa1YMtceDpXIv07nr2POilEHZz/QlVKyod440dBzVo20wazAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHSABAf8EEzARMA8GDSqGOgABhI+5DwECAQQwEQYDVR0OBAoECE9WiNfskzviMBMGA1UdIwQMMAqACEjPGzJpfEZpMAoGCCqGSM49BAMCA0kAMEYCIQD83y6WgCXi6PjTU0iNp2fezAqqPIqGsn3cE/ZfMhYytQIhAK4xYtS/yR0FumzGtt5GaOqSkd6Pssbht0tOjQxrq8dq" ],
                  "applyTimeBasedCpvChecks" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.6" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.6.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.6 (Service Opt In) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_6_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "90-B3-D5-1F-30-00-00-02",
                  "originatorCounter" : 1000,
                  "sr" : "8.6",
                  "srv" : "8.6",
                  "cv" : 8
                },
                "bodyParameters" : {
                  "deviceId" : "00-DB-12-34-56-78-90-A0",
                  "deviceType" : "ESME",
                  "mpxns" : {
                    "importMpxn" : "1312345678111",
                    "secondaryImportMpan" : "1312345678222",
                    "exportMpan" : "1312345678333"
                  },
                  "optInDate" : "2015-02-01"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.7.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.7.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.7.1 (Join Service (Critical)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.7.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_7_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "8.7",
                  "srv" : "8.7.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "otherDeviceId" : "00-DB-12-34-56-78-90-9A"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.7.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.7.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.7.2 (Join Service (Non-Critical)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.7.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_7_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1001,
                  "sr" : "8.7",
                  "srv" : "8.7.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "otherDeviceId" : "00-DB-12-34-56-78-90-9C"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.8.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.8.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.8.1 (Unjoin Service (Critical)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.8.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_8_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1001,
                  "sr" : "8.8",
                  "srv" : "8.8.1",
                  "cv" : 4
                },
                "bodyParameters" : {
                  "otherDeviceId" : "00-DB-12-34-56-78-90-99"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.8.2" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.8.2.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.8.2 (Unjoin Service (Non-Critical)) to be\nprocessed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.8.2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_8_2_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A1",
                  "originatorCounter" : 1000,
                  "sr" : "8.8",
                  "srv" : "8.8.2",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "otherDeviceId" : "01-02-03-04-05-06-07-08"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/8.9" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 8.9.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 8.9 (Read Device Log) to be processed by the\nrequest executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv8.9",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_8_9_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A2",
                  "originatorCounter" : 1000,
                  "sr" : "8.9",
                  "srv" : "8.9",
                  "cv" : 1
                },
                "bodyParameters" : {
                  "readSecurityDetails" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/request-executor/srv/9.1" : {
      "post" : {
        "tags" : [ "Request Executor API" ],
        "summary" : "Allows to submit a set of inputs to specify the header and the parameters for the SRV 9.1.",
        "description" : "Endpoint to submit inputs that specify the header and the parameters for the SRV 9.1 (Request Customer Identification Number)\nto be processed by the request executor and sent to the DCC gateway.\n",
        "operationId" : "sendSrv9.1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Srv_9_1_Dto"
              },
              "example" : {
                "duisVersion" : "4.0",
                "header" : {
                  "originatorName" : "supplier1-90-B3-D5-1F-30-01-00-00",
                  "target" : "00-DB-12-34-56-78-90-A0",
                  "originatorCounter" : 1000,
                  "sr" : "9.1",
                  "srv" : "9.1",
                  "cv" : 1
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success. The request was successfully processed, submitted to DCC Gateway and an HTTP response was received.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "400" : {
            "description" : "Error. At least one validation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          },
          "405" : {
            "description" : "Error. An invalid method was used. Only POST is allowed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "415" : {
            "description" : "Error. The request was submitted with an unsupported media type value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TafErrorResponseDto"
                }
              }
            }
          },
          "500" : {
            "description" : "Error. Unable to finish processing the request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestExecutorResponseDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ALCSHCALCSSpecialDayDto" : {
        "required" : [ "index" ],
        "type" : "object",
        "properties" : {
          "year" : {
            "description" : "A field for the element at sr:Date/Year. Either the specified value of the year, null for a non specified year, or the year() placeholder (e.g., ${year()} or ${year(offset)})",
            "type" : "string"
          },
          "month" : {
            "description" : "A field for the element at sr:Date/Month. Either the specified value of the month, null for a non specified month, or the month() placeholder (e.g., ${month()} or ${month(offset)})",
            "type" : "string"
          },
          "dayOfMonth" : {
            "description" : "A field for the element at sr:Date/DayOfMonth. Either the specified value of the day-of-month, null for a non specified day-of-month, -1 for the last-day-of-month, -2 for second-last-day-of-month, or the dayOfMonth() placeholder (e.g., ${dayOfMonth()} or ${dayOfMonth(offset)})",
            "type" : "string"
          },
          "dayOfWeek" : {
            "description" : "A field for the element at sr:Date/DayOfWeek. Either the specified value of the day-of-week, null for a non specified day-of-week, or the dayOfWeek() placeholder (e.g., ${dayOfWeek()} or ${dayOfWeek(offset)})",
            "type" : "string"
          },
          "index" : {
            "description" : "sr:ALCSHCALCSSpecialDays/ALCSHCALCSSpecialDay#index",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "AddToBoostButtonDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:AddAuxiliaryLoadToBoostButton/AddToBoostButton#value",
            "type" : "boolean"
          },
          "index" : {
            "description" : "sr:AddAuxiliaryLoadToBoostButton/AddToBoostButton#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "AdtReportDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "eui64" : {
            "description" : "EUI-64 of the user that submitted the request.",
            "pattern" : "^([0-9A-Fa-f]{2}-){7}([0-9A-Fa-f]{2})$",
            "type" : "string"
          },
          "srv" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Srv"
            }, {
              "description" : "Service Reference Variant value of the request."
            } ]
          },
          "report" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AdtReportResultDto"
            }, {
              "description" : "Report object that contains the details on whether the SRV is critical and the number of requests for each timePeriod configured according to the ADT processing."
            } ]
          }
        }
      },
      "AdtReportResultDto" : {
        "type" : "object",
        "properties" : {
          "criticalSrv" : {
            "description" : "Whether the SRV is critical or not.",
            "type" : "boolean"
          },
          "thresholdResults" : {
            "description" : "Array of results of the ADT threshold validation that contains the rules configured for the referred eui64 and srv, and for each the numberOfRequests recorded for said timePeriod.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AdtThresholdResultDto"
            }
          }
        }
      },
      "AdtThresholdResultDto" : {
        "type" : "object",
        "properties" : {
          "timePeriod" : {
            "format" : "int32",
            "description" : "Time period value (in minutes) as it was configured in ADT Configuration for the EUI64 and SRV.",
            "type" : "integer"
          },
          "numberOfRequests" : {
            "format" : "int32",
            "description" : "Number of requests recorded for the referred EUI64 and SRV that were submitted according to ADT processing for the timePeriod referred.",
            "type" : "integer"
          },
          "adtThresholdValue" : {
            "format" : "int32",
            "description" : "ADT threshold value as it was configured in ADT Configuration for the EUI64 and SRV.",
            "type" : "integer"
          }
        }
      },
      "Alarm" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "AuxiliaryControllerSpecialDayDefinitionDto" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "year" : {
            "description" : "A field for the element at sr:Date/Year. Either the specified value of the year, null for a non specified year, or the year() placeholder (e.g., ${year()} or ${year(offset)})",
            "type" : "string"
          },
          "month" : {
            "description" : "A field for the element at sr:Date/Month. Either the specified value of the month, null for a non specified month, or the month() placeholder (e.g., ${month()} or ${month(offset)})",
            "type" : "string"
          },
          "dayOfMonth" : {
            "description" : "A field for the element at sr:Date/DayOfMonth. Either the specified value of the day-of-month, null for a non specified day-of-month, -1 for the last-day-of-month, -2 for second-last-day-of-month, or the dayOfMonth() placeholder (e.g., ${dayOfMonth()} or ${dayOfMonth(offset)})",
            "type" : "string"
          },
          "dayOfWeek" : {
            "description" : "A field for the element at sr:Date/DayOfWeek. Either the specified value of the day-of-week, null for a non specified day-of-week, or the dayOfWeek() placeholder (e.g., ${dayOfWeek()} or ${dayOfWeek(offset)})",
            "type" : "string"
          },
          "identifier" : {
            "description" : "sr:AuxiliaryControllerSpecialDayDefinitions/AuxiliaryControllerSpecialDayDefinition#identifier",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "BlockThresholdDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:ElecThresholds/BlockThreshold#value",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:ElecThresholds/BlockThreshold#index",
            "maximum" : 3,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "CertificateDto" : {
        "type" : "object",
        "properties" : {
          "issuer" : {
            "description" : "Issuer of the certificate.",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "Serial number of the certificate.",
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "ChfConnectionMethod" : {
        "enum" : [ "Hot-shoe", "Cradle", "ESME" ],
        "type" : "string"
      },
      "ChfFaultReason" : {
        "enum" : [ "LED Fault", "Illegal interference or missing seals", "Damaged case", "Manufacturing defect", "Damaged Connector", "SMHAN Interface Fault", "SM WAN Fault", "Environmental conditions exceeded", "Aerial fault" ],
        "type" : "string"
      },
      "ChfFaultReturnType" : {
        "enum" : [ "Fault identified post installation", "Fault identified prior to installation" ],
        "type" : "string"
      },
      "ChfInstallType" : {
        "enum" : [ "New CHF Install", "CHF Install - no SM WAN", "Replacement CHF Install" ],
        "type" : "string"
      },
      "ChfInstallType1" : {
        "enum" : [ "New CHF Install", "CHF Install - no SM WAN", "Replacement CHF Install" ],
        "type" : "string"
      },
      "ChfLocation" : {
        "enum" : [ "Indoors on external wall", "Outside Premises", "Basement or Cellar", "Deep indoors" ],
        "type" : "string"
      },
      "ChfLocation1" : {
        "enum" : [ "Indoors on external wall", "Outside Premises", "Basement or Cellar", "Deep indoors" ],
        "type" : "string"
      },
      "ChfNoFaultReturnType" : {
        "enum" : [ "No Fault Return (general)", "No Fault Return (SM WAN variant replacement requested by DCC)", "No Fault Return (non-dom opt out)", "Lost or Stolen Hub", "No Fault Return (dual supplier HAN variant replacement)" ],
        "type" : "string"
      },
      "CorrelateReportDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "transformDuisRequest" : {
            "description" : "DUIS Request (in base64) that was provided to transform web service.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "transformDuisResponse" : {
            "description" : "DUIS Response (in base64) that contains the PreCommand that was received form the transform web service.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "correlateResult" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CorrelateResultDto"
            }, {
              "description" : "Contains the result of the Correlate service (from P&C)."
            } ]
          }
        }
      },
      "CorrelateResultDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "CorrelateResult status.",
            "type" : "string"
          },
          "errorMessages" : {
            "description" : "CorrelateResult error messages. This is only present if the correlation has failed.",
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParseCorrelateErrorMessageDto"
            }
          }
        }
      },
      "CredentialType" : {
        "enum" : [ "Key Agreement", "Digital Signature" ],
        "type" : "string"
      },
      "CredentialType1" : {
        "enum" : [ "Key Agreement", "Digital Signature" ],
        "type" : "string"
      },
      "CurrencyUnits" : {
        "enum" : [ "GBP", "ECB" ],
        "type" : "string"
      },
      "CurrencyUnits1" : {
        "enum" : [ "GBP", "ECB" ],
        "type" : "string"
      },
      "DebtRecoveryRatePeriod" : {
        "enum" : [ "DAILY", "HOURLY" ],
        "type" : "string"
      },
      "DebtRecoveryRatePeriod1" : {
        "enum" : [ "WEEKLY", "QUARTERLY", "DAILY", "MONTHLY", "HOURLY" ],
        "type" : "string"
      },
      "DeviceType" : {
        "enum" : [ "CHF", "PPMID", "IHD", "GSME", "ESME", "CAD", "GPF", "HCALCS" ],
        "type" : "string"
      },
      "DeviceType1" : {
        "enum" : [ "CHF", "PPMID", "IHD", "GSME", "ESME", "CAD", "GPF", "HCALCS" ],
        "type" : "string"
      },
      "DspScheduledServiceReference" : {
        "enum" : [ "4.10", "14.1", "4.12", "4.14", "4.15", "4.16", "4.17", "4.6", "4.8" ],
        "type" : "string"
      },
      "DspScheduledServiceReferenceVariant" : {
        "enum" : [ "4.10", "4.12.2", "4.12.1", "4.14", "4.15", "4.16", "4.6.1", "4.8.2", "4.8.3", "14.1", "4.6.2", "4.8.1", "4.17" ],
        "type" : "string"
      },
      "DspSignatureValidationReportDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "duisResponse" : {
            "description" : "DUIS Response XML content (in base64) that the Signature validation was applied to.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "certificate" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CertificateDto"
            }, {
              "description" : "Certificate object that contains the details of the certificate used to validate the DSP Signature."
            } ]
          }
        }
      },
      "DuisVersion" : {
        "enum" : [ "1.0", "2.0", "3.0", "3.1", "4.0" ],
        "type" : "string"
      },
      "EsmeEventLogType" : {
        "enum" : [ "ALCS", "ESME" ],
        "type" : "string"
      },
      "EsmeVariant" : {
        "enum" : [ "A", "B", "BD", "ADE", "BDE", "C", "ADF", "CDF", "ADG", "BF", "CDE", "BDF", "ADEF", "ADEG", "CDEF", "CD", "AEF", "BEF", "AD", "CF", "AEG", "AF", "CEF", "AG", "BDEF" ],
        "type" : "string"
      },
      "EsmeVariant1" : {
        "enum" : [ "A", "B", "BD", "ADE", "BDE", "C", "ADF", "CDF", "ADG", "BF", "CDE", "BDF", "ADEF", "ADEG", "CDEF", "CD", "AEF", "BEF", "AD", "CF", "AEG", "AF", "CEF", "AG", "BDEF" ],
        "type" : "string"
      },
      "EventLog" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "HanAlert" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "HeaderDto" : {
        "required" : [ "originatorName", "target", "sr", "srv", "cv" ],
        "type" : "object",
        "properties" : {
          "originatorName" : {
            "description" : "Service User name, as specified in the Service User configuration API.",
            "pattern" : "\\S",
            "type" : "string"
          },
          "target" : {
            "description" : "Identifier of the target of the DUIS Request.",
            "pattern" : "^([0-9A-Fa-f]{2}-){7}([0-9A-Fa-f]{2})$",
            "type" : "string"
          },
          "originatorCounter" : {
            "description" : "Originator counter. If the values is not provided, the adaptor will generate a time-based originator counter.",
            "maximum" : 18446744073709551615,
            "minimum" : 0,
            "type" : "integer"
          },
          "sr" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Sr"
            }, {
              "description" : "Service Reference. For valid values refer to DUIS."
            } ]
          },
          "srv" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Srv"
            }, {
              "description" : "Service Reference Variant. For valid values refer to DUIS."
            } ]
          },
          "transformCv" : {
            "format" : "int32",
            "description" : "Transform Command Variant. Valid values: 1, 2, 3, 4, 5, 6, 7, 8",
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer"
          },
          "cv" : {
            "format" : "int32",
            "description" : "Command Variant. Valid values: 1, 2, 3, 4, 5, 6, 7, 8",
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer"
          },
          "firstInSequence" : {
            "description" : "Whether the Request is the first in a sequence. This corresponds to the DUIS element FirstInSequence.",
            "type" : "boolean"
          },
          "precedingServiceRequestId" : {
            "description" : "The RequestID of a preceding request when this particular request is intended to be executed in a sequence. This corresponds to the DUIS element PrecedingServiceRequestID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          }
        }
      },
      "LoadLimitSupplyState" : {
        "enum" : [ "Disable", "Unchanged" ],
        "type" : "string"
      },
      "LogToRead" : {
        "enum" : [ "GSMESecurity", "GSMEEvent", "Event", "PowerEvent", "Security", "ALCSEvent" ],
        "type" : "string"
      },
      "NonDisablementAction" : {
        "enum" : [ "STOP", "START" ],
        "type" : "string"
      },
      "NonDisablementScript" : {
        "enum" : [ "STOP", "START" ],
        "type" : "string"
      },
      "ParseCorrelateErrorMessageDto" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "description" : "Error code value returned by the P&C tool (only applicable if it failed).",
            "type" : "string"
          },
          "message" : {
            "description" : "Error message value returned by the P&C tool (only applicable if it failed).",
            "type" : "string"
          }
        }
      },
      "Periodicity" : {
        "enum" : [ "Daily", "Monthly", "Weekly", "Yearly", "SixMonthly", "Quarterly" ],
        "type" : "string"
      },
      "PremiseType" : {
        "enum" : [ "High Rise Apartment (MDU > 5 floors)", "Terraced", "Detached / Semi Detached", "Low Rise Apartment (MDU <= 5 floors)" ],
        "type" : "string"
      },
      "PrepaymentDto" : {
        "required" : [ "suspendDebtDisabled", "suspendDebtEmergency", "disablementThreshold" ],
        "type" : "object",
        "properties" : {
          "suspendDebtDisabled" : {
            "description" : "A field for the element at sr:UpdatePaymentMode/Prepayment/SuspendDebtDisabled.",
            "type" : "boolean"
          },
          "suspendDebtEmergency" : {
            "description" : "A field for the element at sr:UpdatePaymentMode/Prepayment/SuspendDebtEmergency.",
            "type" : "boolean"
          },
          "disablementThreshold" : {
            "description" : "A field for the element at sr:UpdatePaymentMode/Prepayment/DisablementThreshold.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          }
        }
      },
      "RemotePartyRole" : {
        "enum" : [ "ACB", "Root", "NetworkOperator", "Supplier", "Recovery", "TransCoS", "LoadController" ],
        "type" : "string"
      },
      "RemotePartyRole1" : {
        "enum" : [ "ACB", "Root", "NetworkOperator", "Supplier", "Recovery", "TransCoS", "LoadController" ],
        "type" : "string"
      },
      "RemotePartyRole2" : {
        "enum" : [ "ACB", "Root", "NetworkOperator", "Supplier", "Recovery", "TransCoS", "LoadController" ],
        "type" : "string"
      },
      "RemoveFromBoostButtonDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:RemoveAuxiliaryLoadFromBoostButton/RemoveFromBoostButton#value",
            "type" : "boolean"
          },
          "index" : {
            "description" : "sr:RemoveAuxiliaryLoadFromBoostButton/RemoveFromBoostButton#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "RequestDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "duisRequest" : {
            "description" : "DUIS Request XML content in base64 that was submitted to the DCC Gateway.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "requestId" : {
            "description" : "This is the value of the element RequestID from the DUIS Request.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          },
          "signedPreCommand" : {
            "description" : "For SMETS2 Critical requests, the second submission to the DCC Gateway will contain the SignedPreCommand value.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "RequestExecutorBodyDto" : {
        "required" : [ "duisVersion", "header", "bodyXml" ],
        "type" : "object",
        "properties" : {
          "duisVersion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DuisVersion"
            }, {
              "description" : "The DUIS schema version. Valid values: 1.0, 2.0, 3.0, 3.1, 4.0"
            } ]
          },
          "header" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/HeaderDto"
            }, {
              "description" : "This element contains the inputs for the DUIS Header."
            } ]
          },
          "bodyXml" : {
            "description" : "This contains the XML element within the DUIS Body element (in base64).",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "RequestExecutorResponseDto" : {
        "required" : [ "status", "timestamp", "uuid" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "The result status of the request submission."
            } ]
          },
          "timestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ZonedDateTime"
            }, {
              "description" : "The timestamp of the API call."
            } ]
          },
          "uuid" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : "The Universally Unique Identifier (UUID) of the API request."
            } ]
          },
          "errorCode" : {
            "description" : "Error code. Only present if an error occurred.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the description of the error.",
            "type" : "string"
          },
          "adtReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AdtReportDto"
            }, {
              "description" : "ADT Report object. It contains details on the ADT threshold validation. Only present if ADT validation is applied."
            } ]
          },
          "tafSchemaValidationReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TafSchemaValidationReportDto"
            }, {
              "description" : "TAF Schema Validation Report object. It contains details on the XML Body content validation against the DUIS schema."
            } ]
          },
          "transformRequest" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TransformRequestDto"
            }, {
              "description" : "Transform Request object. It contains the DUIS Request that is sent to the transform web service to be transformed into GBCS payload. Only applicable to SMTS2 Critical requests."
            } ]
          },
          "transformResponse" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TransformResponseDto"
            }, {
              "description" : "Transform Response object. It contains the synchronous DUIS Response received from transform web service containing the GBCS payload (PreCommand). Only applicable to SMTS2 Critical requests."
            } ]
          },
          "correlateReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CorrelateReportDto"
            }, {
              "description" : "Correlate Report object. Contains the result of the Correlate (from P&C) of the transformRequest and the transformResponse. Only applicable to SMTS2 Critical requests."
            } ]
          },
          "request" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RequestDto"
            }, {
              "description" : "Request object. It contains the DUIS Request that is sent to the DCC."
            } ]
          },
          "response" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResponseDto"
            }, {
              "description" : "Response object. It contains the synchronous response from DCC Gateway to the request message."
            } ]
          }
        }
      },
      "RequestType" : {
        "enum" : [ "Add", "Remove" ],
        "type" : "string"
      },
      "ResponseDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "dspHttpStatusCode" : {
            "format" : "int32",
            "description" : "HTTP status code from the DCC Gateway response.",
            "type" : "integer"
          },
          "duisResponse" : {
            "description" : "DUIS Response XML content in base64 that was received from the DCC Gateway.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "requestId" : {
            "description" : "This is the value of the element RequestID from the DUIS Response.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          },
          "responseCode" : {
            "description" : "This is the value of the element ResponseCode from the DUIS Response.",
            "type" : "string"
          },
          "scheduleId" : {
            "format" : "int32",
            "description" : "This is the value of the element DSPScheduleID from the DUIS Response, if present.",
            "type" : "integer"
          },
          "dspSignatureValidationReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DspSignatureValidationReportDto"
            }, {
              "description" : "DSP Signature Validation Report. It contains the result of the validation of the DSP signature in the DUIS Response received from the DCC Gateway, if present."
            } ]
          }
        }
      },
      "ScheduleFrequency" : {
        "enum" : [ "Daily", "Monthly", "Weekly", "Half-Yearly", "Yearly", "Quarterly" ],
        "type" : "string"
      },
      "SpecialDayDto" : {
        "required" : [ "date", "index" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "index" : {
            "description" : "sr:ElecSpecialDaysPrepayment/SpecialDay#index",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SpecialDaysApplicabilityDto" : {
        "required" : [ "index" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "description" : "sr:ALCSHCALCSConnectionSchedule/SpecialDaysApplicability#index",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SpecialDaysApplicabilityDto1Dto" : {
        "required" : [ "identifier" ],
        "type" : "object",
        "properties" : {
          "identifier" : {
            "description" : "sr:AuxiliaryControllerSchedule/SpecialDaysApplicability#identifier",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "Sr" : {
        "enum" : [ "1.1", "1.2", "1.5", "1.6", "1.7", "2.1", "2.2", "2.3", "2.5", "3.1", "3.2", "3.3", "3.4", "3.5", "4.1", "4.2", "4.3", "4.4", "4.6", "4.8", "4.10", "4.11", "4.12", "4.13", "4.14", "4.15", "4.16", "4.17", "4.18", "5.1", "5.2", "5.3", "6.2", "6.4", "6.5", "6.6", "6.7", "6.8", "6.11", "6.12", "6.13", "6.14", "6.15", "6.17", "6.18", "6.20", "6.21", "6.22", "6.23", "6.24", "6.25", "6.26", "6.27", "6.28", "6.29", "6.30", "6.31", "6.32", "7.1", "7.2", "7.3", "7.4", "7.5", "7.6", "7.7", "7.8", "7.9", "7.10", "7.11", "7.12", "7.13", "7.14", "7.15", "7.16", "8.1", "8.2", "8.3", "8.4", "8.5", "8.6", "8.7", "8.8", "8.9", "8.11", "8.12", "8.13", "8.14", "9.1", "11.1", "11.2", "11.3", "12.1", "12.2", "14.1" ],
        "type" : "string"
      },
      "SrALCSHCALCSConnectionScheduleDto" : {
        "required" : [ "activateDeactivateSwitch", "alcsScheduleDatesAndTime" ],
        "type" : "object",
        "properties" : {
          "activateDeactivateSwitch" : {
            "$ref" : "#/components/schemas/SrActivateDeactivateSwitchDto"
          },
          "specialDaysApplicability" : {
            "description" : "A field for the element at sr:ALCSHCALCSConnectionSchedule/SpecialDaysApplicability.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpecialDaysApplicabilityDto"
            }
          },
          "daysOfWeekApplicability" : {
            "description" : "A field for the element at sr:ALCSHCALCSConnectionSchedule/DaysOfWeekApplicability. Either the value of the day-of-week (e.g., \\Monday\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "alcsScheduleDatesAndTime" : {
            "$ref" : "#/components/schemas/SrScheduleDatesAndTimeDto"
          }
        }
      },
      "SrALCSHCALCSDescriptionDto" : {
        "required" : [ "switchDescription", "index" ],
        "type" : "object",
        "properties" : {
          "switchDescription" : {
            "description" : "A field for the element at sr:ALCSHCALCSDescription/SwitchDescription.",
            "maxLength" : 127,
            "pattern" : "^[ -~]+$",
            "type" : "string"
          },
          "index" : {
            "description" : "sr:ALCSHCALCSDescription#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrActivateAuxiliaryLoadDto" : {
        "required" : [ "activateAlcsHcalcs" ],
        "type" : "object",
        "properties" : {
          "activateAlcsHcalcs" : {
            "$ref" : "#/components/schemas/SrActivateDeactivateALCSHCALCSDto"
          }
        }
      },
      "SrActivateDeactivateALCSHCALCSDto" : {
        "required" : [ "duration", "index" ],
        "type" : "object",
        "properties" : {
          "duration" : {
            "description" : "A field for the element at sr:ActivateDeactivateALCSHCALCS/Duration.",
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:ActivateDeactivateALCSHCALCS#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrActivateDeactivateSwitchDto" : {
        "required" : [ "index" ],
        "type" : "object",
        "properties" : {
          "activateSwitch" : {
            "description" : "A field for the element at sr:ActivateDeactivateSwitch/ActivateSwitch.",
            "type" : "boolean"
          },
          "deactivateSwitch" : {
            "description" : "A field for the element at sr:ActivateDeactivateSwitch/DeactivateSwitch.",
            "type" : "boolean"
          },
          "index" : {
            "description" : "sr:ActivateDeactivateSwitch#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrActivateFirmwareDto" : {
        "required" : [ "firmwareHash" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "firmwareHash" : {
            "description" : "A field for the element at sr:ActivateFirmware/FirmwareHash.",
            "maxLength" : 64,
            "minLength" : 64,
            "pattern" : "^([0-9a-fA-F]{2})+$",
            "type" : "string"
          }
        }
      },
      "SrAddAuxiliaryLoadToBoostButtonDto" : {
        "required" : [ "addToBoostButton" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "addToBoostButton" : {
            "description" : "A field for the element at sr:AddAuxiliaryLoadToBoostButton/AddToBoostButton.",
            "maxItems" : 5,
            "minItems" : 5,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddToBoostButtonDto"
            }
          }
        }
      },
      "SrAddDeviceToCHFWhitelistDto" : {
        "required" : [ "joinTimePeriod", "installCode" ],
        "type" : "object",
        "properties" : {
          "joinTimePeriod" : {
            "description" : "A field for the element at sr:AddDeviceToCHFWhitelist/JoinTimePeriod.",
            "maximum" : 3600,
            "minimum" : 1,
            "type" : "integer"
          },
          "installCode" : {
            "description" : "A field for the element at sr:AddDeviceToCHFWhitelist/InstallCode.",
            "maxLength" : 32,
            "minLength" : 12,
            "pattern" : "^([0-9a-fA-F]{2})+$",
            "type" : "string"
          },
          "importMpxn" : {
            "description" : "A field for the element at sr:AddDeviceToCHFWhitelist/ImportMPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "secondaryImportMpan" : {
            "description" : "A field for the element at sr:AddDeviceToCHFWhitelist/SecondaryImportMPAN.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          },
          "exportMpan" : {
            "description" : "A field for the element at sr:AddDeviceToCHFWhitelist/ExportMPAN.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          }
        }
      },
      "SrAdjustOrResetDto" : {
        "type" : "object",
        "properties" : {
          "adjustMeterBalance" : {
            "description" : "A field for the element at sr:AdjustOrReset/AdjustMeterBalance.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "resetMeterBalance" : {
            "description" : "A field for the element at sr:AdjustOrReset/ResetMeterBalance.",
            "type" : "boolean"
          }
        }
      },
      "SrAuxiliaryControllerActionDto" : {
        "required" : [ "commandedStateLevel", "auxiliaryControllerN" ],
        "type" : "object",
        "properties" : {
          "commandedStateLevel" : {
            "description" : "A field for the element at sr:AuxiliaryControllerAction/CommandedStateLevel.",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "inputFromControlledLoad" : {
            "description" : "A field for the element at sr:AuxiliaryControllerAction/InputFromControlledLoad.",
            "type" : "boolean"
          },
          "auxiliaryControllerN" : {
            "description" : "sr:AuxiliaryControllerAction#auxiliaryControllerN",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrAuxiliaryControllerScheduleDto" : {
        "required" : [ "auxiliaryControllerAction", "auxiliaryControllerSchedulePeriodAndTime" ],
        "type" : "object",
        "properties" : {
          "auxiliaryControllerAction" : {
            "$ref" : "#/components/schemas/SrAuxiliaryControllerActionDto"
          },
          "specialDaysApplicability" : {
            "description" : "A field for the element at sr:AuxiliaryControllerSchedule/SpecialDaysApplicability.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpecialDaysApplicabilityDto1Dto"
            }
          },
          "daysOfWeekApplicability" : {
            "description" : "A field for the element at sr:AuxiliaryControllerSchedule/DaysOfWeekApplicability. Either the value of the day-of-week (e.g., \\Monday\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "auxiliaryControllerSchedulePeriodAndTime" : {
            "$ref" : "#/components/schemas/SrScheduleDatesAndTimeDto"
          }
        }
      },
      "SrAverageRMSVoltageSettingsDto" : {
        "required" : [ "averageRmsOverVoltageThreshold", "averageRmsUnderVoltageThreshold", "averageRmsVoltageMeasurementPeriod" ],
        "type" : "object",
        "properties" : {
          "averageRmsOverVoltageThreshold" : {
            "description" : "A field for the element at sr:AverageRMSVoltageSettings/AverageRMSOverVoltageThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "averageRmsUnderVoltageThreshold" : {
            "description" : "A field for the element at sr:AverageRMSVoltageSettings/AverageRMSUnderVoltageThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "averageRmsVoltageMeasurementPeriod" : {
            "description" : "A field for the element at sr:AverageRMSVoltageSettings/AverageRMSVoltageMeasurementPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrBillingCalendarDto" : {
        "type" : "object",
        "properties" : {
          "electricityBillingCalendar" : {
            "$ref" : "#/components/schemas/SrElectricityBillingCalendarDto"
          },
          "gasBillingCalendar" : {
            "$ref" : "#/components/schemas/SrGasBillingCalendarDto"
          }
        }
      },
      "SrBillingCalendarQSMYDto" : {
        "required" : [ "dayOfMonth", "billingPeriodStartMonth" ],
        "type" : "object",
        "properties" : {
          "dayOfMonth" : {
            "description" : "A field for the element at sr:BillingCalendarQSMY/DayOfMonth. Either the value of a billing day-of-month or the dayOfMonthBilling() placeholder (e.g., ${dayOfMonthBilling()} or ${dayOfMonthBilling(offset)})",
            "type" : "string"
          },
          "billingPeriodStartMonth" : {
            "description" : "A field for the element at sr:BillingCalendarQSMY/BillingPeriodStartMonth. Either the value of a billing period start month or the month() placeholder (e.g., ${month()} or ${month(offset)})",
            "type" : "string"
          }
        }
      },
      "SrCHFFaultReturnDto" : {
        "required" : [ "deviceId", "chfFaultReturnType", "otherDeviceId", "chfConnectionMethod", "chfFaultReason" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:CHFFaultReturn/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "chfFaultReturnType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfFaultReturnType"
            }, {
              "description" : "A field for the element at sr:CHFFaultReturn/CHFFaultReturnType."
            } ]
          },
          "userRefDateTime" : {
            "description" : "A field for the element at sr:CHFFaultReturn/UserRefDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "userRefId" : {
            "description" : "A field for the element at sr:CHFFaultReturn/UserRefID.",
            "maxLength" : 25,
            "type" : "string"
          },
          "otherDeviceId" : {
            "description" : "A field for the element at sr:CHFFaultReturn/OtherDeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "incidentReference" : {
            "description" : "A field for the element at sr:CHFFaultReturn/IncidentReference.",
            "maxLength" : 15,
            "type" : "string"
          },
          "chfConnectionMethod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfConnectionMethod"
            }, {
              "description" : "A field for the element at sr:CHFFaultReturn/CHFConnectionMethod."
            } ]
          },
          "chfFaultReason" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfFaultReason"
            }, {
              "description" : "A field for the element at sr:CHFFaultReturn/CHFFaultReason."
            } ]
          },
          "additionalInformation" : {
            "description" : "A field for the element at sr:CHFFaultReturn/AdditionalInformation.",
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "SrCHFInstallSuccessNoSMWANDto" : {
        "required" : [ "deviceId", "chfInstallType", "mpxn", "aerialInstall", "chfLocation", "premiseType", "metalObstructionCheck", "connectivityObstructionCheck", "sharedObstructionCheck" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "chfInstallType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfInstallType"
            }, {
              "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/CHFInstallType."
            } ]
          },
          "installDateTime" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/InstallDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "userRefId" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/UserRefID.",
            "maxLength" : 25,
            "type" : "string"
          },
          "mpxn" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/MPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "gisData" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/GISData.",
            "maxLength" : 25,
            "type" : "string"
          },
          "aerialInstall" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/AerialInstall.",
            "type" : "boolean"
          },
          "chfLocation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfLocation"
            }, {
              "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/CHFLocation."
            } ]
          },
          "premiseType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PremiseType"
            }, {
              "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/PremiseType."
            } ]
          },
          "metalObstructionCheck" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/MetalObstructionCheck.",
            "type" : "boolean"
          },
          "connectivityObstructionCheck" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/ConnectivityObstructionCheck.",
            "type" : "boolean"
          },
          "sharedObstructionCheck" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/SharedObstructionCheck.",
            "type" : "boolean"
          },
          "additionalInformation" : {
            "description" : "A field for the element at sr:CHFInstallSuccessNoSMWAN/AdditionalInformation.",
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "SrCHFInstallSuccessSMWANDto" : {
        "required" : [ "deviceId", "chfInstallType", "mpxn", "aerialInstall", "chfLocation" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "chfInstallType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfInstallType1"
            }, {
              "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/CHFInstallType."
            } ]
          },
          "installDateTime" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/InstallDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "userRefId" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/UserRefID.",
            "maxLength" : 25,
            "type" : "string"
          },
          "mpxn" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/MPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "gisData" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/GISData.",
            "maxLength" : 25,
            "type" : "string"
          },
          "aerialInstall" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/AerialInstall.",
            "type" : "boolean"
          },
          "chfLocation" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfLocation1"
            }, {
              "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/CHFLocation."
            } ]
          },
          "additionalInformation" : {
            "description" : "A field for the element at sr:CHFInstallSuccessSMWAN/AdditionalInformation.",
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "SrCHFNoFaultReturnDto" : {
        "required" : [ "deviceId", "chfNoFaultReturnType" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:CHFNoFaultReturn/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "chfNoFaultReturnType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ChfNoFaultReturnType"
            }, {
              "description" : "A field for the element at sr:CHFNoFaultReturn/CHFNoFaultReturnType."
            } ]
          },
          "userRefDateTime" : {
            "description" : "A field for the element at sr:CHFNoFaultReturn/UserRefDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "userRefId" : {
            "description" : "A field for the element at sr:CHFNoFaultReturn/UserRefID.",
            "maxLength" : 25,
            "type" : "string"
          },
          "incidentReference" : {
            "description" : "A field for the element at sr:CHFNoFaultReturn/IncidentReference.",
            "maxLength" : 15,
            "type" : "string"
          },
          "additionalInformation" : {
            "description" : "A field for the element at sr:CHFNoFaultReturn/AdditionalInformation.",
            "maxLength" : 200,
            "type" : "string"
          }
        }
      },
      "SrChannels0To26Dto" : {
        "type" : "object",
        "properties" : {
          "channel0" : {
            "description" : "A field for the element at sr:Channels0To26/Channel0.",
            "type" : "boolean"
          },
          "channel1" : {
            "description" : "A field for the element at sr:Channels0To26/Channel1.",
            "type" : "boolean"
          },
          "channel2" : {
            "description" : "A field for the element at sr:Channels0To26/Channel2.",
            "type" : "boolean"
          },
          "channel3" : {
            "description" : "A field for the element at sr:Channels0To26/Channel3.",
            "type" : "boolean"
          },
          "channel4" : {
            "description" : "A field for the element at sr:Channels0To26/Channel4.",
            "type" : "boolean"
          },
          "channel5" : {
            "description" : "A field for the element at sr:Channels0To26/Channel5.",
            "type" : "boolean"
          },
          "channel6" : {
            "description" : "A field for the element at sr:Channels0To26/Channel6.",
            "type" : "boolean"
          },
          "channel7" : {
            "description" : "A field for the element at sr:Channels0To26/Channel7.",
            "type" : "boolean"
          },
          "channel8" : {
            "description" : "A field for the element at sr:Channels0To26/Channel8.",
            "type" : "boolean"
          },
          "channel9" : {
            "description" : "A field for the element at sr:Channels0To26/Channel9.",
            "type" : "boolean"
          },
          "channel10" : {
            "description" : "A field for the element at sr:Channels0To26/Channel10.",
            "type" : "boolean"
          },
          "channel11" : {
            "description" : "A field for the element at sr:Channels0To26/Channel11.",
            "type" : "boolean"
          },
          "channel12" : {
            "description" : "A field for the element at sr:Channels0To26/Channel12.",
            "type" : "boolean"
          },
          "channel13" : {
            "description" : "A field for the element at sr:Channels0To26/Channel13.",
            "type" : "boolean"
          },
          "channel14" : {
            "description" : "A field for the element at sr:Channels0To26/Channel14.",
            "type" : "boolean"
          },
          "channel15" : {
            "description" : "A field for the element at sr:Channels0To26/Channel15.",
            "type" : "boolean"
          },
          "channel16" : {
            "description" : "A field for the element at sr:Channels0To26/Channel16.",
            "type" : "boolean"
          },
          "channel17" : {
            "description" : "A field for the element at sr:Channels0To26/Channel17.",
            "type" : "boolean"
          },
          "channel18" : {
            "description" : "A field for the element at sr:Channels0To26/Channel18.",
            "type" : "boolean"
          },
          "channel19" : {
            "description" : "A field for the element at sr:Channels0To26/Channel19.",
            "type" : "boolean"
          },
          "channel20" : {
            "description" : "A field for the element at sr:Channels0To26/Channel20.",
            "type" : "boolean"
          },
          "channel21" : {
            "description" : "A field for the element at sr:Channels0To26/Channel21.",
            "type" : "boolean"
          },
          "channel22" : {
            "description" : "A field for the element at sr:Channels0To26/Channel22.",
            "type" : "boolean"
          },
          "channel23" : {
            "description" : "A field for the element at sr:Channels0To26/Channel23.",
            "type" : "boolean"
          },
          "channel24" : {
            "description" : "A field for the element at sr:Channels0To26/Channel24.",
            "type" : "boolean"
          },
          "channel25" : {
            "description" : "A field for the element at sr:Channels0To26/Channel25.",
            "type" : "boolean"
          },
          "channel26" : {
            "description" : "A field for the element at sr:Channels0To26/Channel26.",
            "type" : "boolean"
          }
        }
      },
      "SrChannels27To34Dto" : {
        "type" : "object",
        "properties" : {
          "channel27" : {
            "description" : "A field for the element at sr:Channels27To34/Channel27.",
            "type" : "boolean"
          },
          "channel28" : {
            "description" : "A field for the element at sr:Channels27To34/Channel28.",
            "type" : "boolean"
          },
          "channel29" : {
            "description" : "A field for the element at sr:Channels27To34/Channel29.",
            "type" : "boolean"
          },
          "channel30" : {
            "description" : "A field for the element at sr:Channels27To34/Channel30.",
            "type" : "boolean"
          },
          "channel31" : {
            "description" : "A field for the element at sr:Channels27To34/Channel31.",
            "type" : "boolean"
          },
          "channel32" : {
            "description" : "A field for the element at sr:Channels27To34/Channel32.",
            "type" : "boolean"
          },
          "channel33" : {
            "description" : "A field for the element at sr:Channels27To34/Channel33.",
            "type" : "boolean"
          },
          "channel34" : {
            "description" : "A field for the element at sr:Channels27To34/Channel34.",
            "type" : "boolean"
          }
        }
      },
      "SrChannels35To61Dto" : {
        "type" : "object",
        "properties" : {
          "channel35" : {
            "description" : "A field for the element at sr:Channels35To61/Channel35.",
            "type" : "boolean"
          },
          "channel36" : {
            "description" : "A field for the element at sr:Channels35To61/Channel36.",
            "type" : "boolean"
          },
          "channel37" : {
            "description" : "A field for the element at sr:Channels35To61/Channel37.",
            "type" : "boolean"
          },
          "channel38" : {
            "description" : "A field for the element at sr:Channels35To61/Channel38.",
            "type" : "boolean"
          },
          "channel39" : {
            "description" : "A field for the element at sr:Channels35To61/Channel39.",
            "type" : "boolean"
          },
          "channel40" : {
            "description" : "A field for the element at sr:Channels35To61/Channel40.",
            "type" : "boolean"
          },
          "channel41" : {
            "description" : "A field for the element at sr:Channels35To61/Channel41.",
            "type" : "boolean"
          },
          "channel42" : {
            "description" : "A field for the element at sr:Channels35To61/Channel42.",
            "type" : "boolean"
          },
          "channel43" : {
            "description" : "A field for the element at sr:Channels35To61/Channel43.",
            "type" : "boolean"
          },
          "channel44" : {
            "description" : "A field for the element at sr:Channels35To61/Channel44.",
            "type" : "boolean"
          },
          "channel45" : {
            "description" : "A field for the element at sr:Channels35To61/Channel45.",
            "type" : "boolean"
          },
          "channel46" : {
            "description" : "A field for the element at sr:Channels35To61/Channel46.",
            "type" : "boolean"
          },
          "channel47" : {
            "description" : "A field for the element at sr:Channels35To61/Channel47.",
            "type" : "boolean"
          },
          "channel48" : {
            "description" : "A field for the element at sr:Channels35To61/Channel48.",
            "type" : "boolean"
          },
          "channel49" : {
            "description" : "A field for the element at sr:Channels35To61/Channel49.",
            "type" : "boolean"
          },
          "channel50" : {
            "description" : "A field for the element at sr:Channels35To61/Channel50.",
            "type" : "boolean"
          },
          "channel51" : {
            "description" : "A field for the element at sr:Channels35To61/Channel51.",
            "type" : "boolean"
          },
          "channel52" : {
            "description" : "A field for the element at sr:Channels35To61/Channel52.",
            "type" : "boolean"
          },
          "channel53" : {
            "description" : "A field for the element at sr:Channels35To61/Channel53.",
            "type" : "boolean"
          },
          "channel54" : {
            "description" : "A field for the element at sr:Channels35To61/Channel54.",
            "type" : "boolean"
          },
          "channel55" : {
            "description" : "A field for the element at sr:Channels35To61/Channel55.",
            "type" : "boolean"
          },
          "channel56" : {
            "description" : "A field for the element at sr:Channels35To61/Channel56.",
            "type" : "boolean"
          },
          "channel57" : {
            "description" : "A field for the element at sr:Channels35To61/Channel57.",
            "type" : "boolean"
          },
          "channel58" : {
            "description" : "A field for the element at sr:Channels35To61/Channel58.",
            "type" : "boolean"
          },
          "channel59" : {
            "description" : "A field for the element at sr:Channels35To61/Channel59.",
            "type" : "boolean"
          },
          "channel60" : {
            "description" : "A field for the element at sr:Channels35To61/Channel60.",
            "type" : "boolean"
          },
          "channel61" : {
            "description" : "A field for the element at sr:Channels35To61/Channel61.",
            "type" : "boolean"
          }
        }
      },
      "SrClearEventLogDto" : {
        "type" : "object",
        "properties" : {
          "esmeEventLogType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EsmeEventLogType"
            }, {
              "description" : "A field for the element at sr:ClearEventLog/ESMEEventLogType."
            } ]
          }
        }
      },
      "SrConfigureAlertBehaviourDto" : {
        "type" : "object",
        "properties" : {
          "electricitySupplierAlerts" : {
            "$ref" : "#/components/schemas/SrElectricitySupplierAlertsDto"
          },
          "electricitySupplierHanAlertSettings" : {
            "$ref" : "#/components/schemas/SrElectricitySupplierAlertsDto"
          },
          "electricitySupplierAlarmSettings" : {
            "$ref" : "#/components/schemas/SrElectricitySupplierAlertsDto"
          },
          "electricitySupplierLoggingSettings" : {
            "$ref" : "#/components/schemas/SrElectricitySupplierAlertsDto"
          },
          "electricityNetworkOperatorAlerts" : {
            "$ref" : "#/components/schemas/SrElectricityNetworkOperatorAlertsDto"
          },
          "electricityNetworkOperatorLoggingSettings" : {
            "$ref" : "#/components/schemas/SrElectricityNetworkOperatorAlertsDto"
          },
          "gasSupplierAlerts" : {
            "$ref" : "#/components/schemas/SrSupplierGSMEDto"
          },
          "gasSupplierAlertEventSettings" : {
            "$ref" : "#/components/schemas/SrSupplierGSMEAlertsEventsDto"
          }
        }
      },
      "SrDSPScheduleDto" : {
        "required" : [ "scheduleFrequency", "scheduleStartDate", "dspScheduledServiceReference", "dspScheduledServiceReferenceVariant", "deviceId" ],
        "type" : "object",
        "properties" : {
          "scheduleFrequency" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ScheduleFrequency"
            }, {
              "description" : "A field for the element at sr:DSPSchedule/ScheduleFrequency."
            } ]
          },
          "scheduleStartDate" : {
            "description" : "A field for the element at sr:DSPSchedule/ScheduleStartDate. Either the value of a xs:date or the date() placeholder (e.g., ${date()} or ${date(offset)})",
            "type" : "string"
          },
          "scheduleEndDate" : {
            "description" : "A field for the element at sr:DSPSchedule/ScheduleEndDate. Either the value of a xs:date or the date() placeholder (e.g., ${date()} or ${date(offset)})",
            "type" : "string"
          },
          "scheduleExecutionStartTime" : {
            "description" : "A field for the element at sr:DSPSchedule/ScheduleExecutionStartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "kaPublicSecurityCredential" : {
            "description" : "A field for the element at sr:DSPSchedule/KAPublicSecurityCredential.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "dspScheduledServiceReference" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DspScheduledServiceReference"
            }, {
              "description" : "A field for the element at sr:DSPSchedule/DSPScheduledServiceReference."
            } ]
          },
          "dspScheduledServiceReferenceVariant" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DspScheduledServiceReferenceVariant"
            }, {
              "description" : "A field for the element at sr:DSPSchedule/DSPScheduledServiceReferenceVariant."
            } ]
          },
          "deviceId" : {
            "description" : "A field for the element at sr:DSPSchedule/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "dspRetrieveImportDailyReadLog" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspRetrieveExportDailyReadLog" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadActiveImportProfileData" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadReactiveImportProfileData" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadExportProfileData" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadNetworkData" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadMaximumDemandImportRegisters" : {
            "description" : "A field for the element at sr:DSPSchedule/DSPReadMaximumDemandImportRegisters.",
            "type" : "boolean"
          },
          "dspReadMaximumDemandExportRegisters" : {
            "description" : "A field for the element at sr:DSPSchedule/DSPReadMaximumDemandExportRegisters.",
            "type" : "boolean"
          },
          "dspReadPrepaymentDailyReadLog" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspReadLoadLimitData" : {
            "description" : "A field for the element at sr:DSPSchedule/DSPReadLoadLimitData.",
            "type" : "boolean"
          },
          "dspReadActivePowerImport" : {
            "description" : "A field for the element at sr:DSPSchedule/DSPReadActivePowerImport.",
            "type" : "boolean"
          },
          "dspRetrieveDailyConsumptionLog" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodOffsetDto"
          },
          "dspRecordNetworkDataGAS" : {
            "description" : "A field for the element at sr:DSPSchedule/DSPRecordNetworkDataGAS.",
            "type" : "boolean"
          }
        }
      },
      "SrDateDto" : {
        "type" : "object",
        "properties" : {
          "year" : {
            "description" : "A field for the element at sr:Date/Year. Either the specified value of the year, null for a non specified year, or the year() placeholder (e.g., ${year()} or ${year(offset)})",
            "type" : "string"
          },
          "month" : {
            "description" : "A field for the element at sr:Date/Month. Either the specified value of the month, null for a non specified month, or the month() placeholder (e.g., ${month()} or ${month(offset)})",
            "type" : "string"
          },
          "dayOfMonth" : {
            "description" : "A field for the element at sr:Date/DayOfMonth. Either the specified value of the day-of-month, null for a non specified day-of-month, -1 for the last-day-of-month, -2 for second-last-day-of-month, or the dayOfMonth() placeholder (e.g., ${dayOfMonth()} or ${dayOfMonth(offset)})",
            "type" : "string"
          },
          "dayOfWeek" : {
            "description" : "A field for the element at sr:Date/DayOfWeek. Either the specified value of the day-of-week, null for a non specified day-of-week, or the dayOfWeek() placeholder (e.g., ${dayOfWeek()} or ${dayOfWeek(offset)})",
            "type" : "string"
          }
        }
      },
      "SrDeactivateAuxiliaryLoadDto" : {
        "required" : [ "deactivateAlcsHcalcs" ],
        "type" : "object",
        "properties" : {
          "deactivateAlcsHcalcs" : {
            "$ref" : "#/components/schemas/SrActivateDeactivateALCSHCALCSDto"
          }
        }
      },
      "SrDecommissionDeviceDto" : {
        "required" : [ "deviceId" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:DecommissionDevice/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrDeleteScheduleDto" : {
        "type" : "object",
        "properties" : {
          "dspScheduleId" : {
            "description" : "A field for the element at sr:DeleteSchedule/DSPScheduleID.",
            "maximum" : 1000000000000,
            "minimum" : 0,
            "type" : "integer"
          },
          "deviceId" : {
            "description" : "A field for the element at sr:DeleteSchedule/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrDevicePrenotificationDto" : {
        "required" : [ "deviceId", "deviceManufacturer", "deviceModel", "deviceType" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:DevicePrenotification/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "deviceManufacturer" : {
            "description" : "A field for the element at sr:DevicePrenotification/DeviceManufacturer.",
            "maxLength" : 30,
            "type" : "string"
          },
          "deviceModel" : {
            "description" : "A field for the element at sr:DevicePrenotification/DeviceModel.",
            "maxLength" : 30,
            "type" : "string"
          },
          "deviceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeviceType1"
            }, {
              "description" : "A field for the element at sr:DevicePrenotification/DeviceType."
            } ]
          },
          "smetschtsVersion" : {
            "description" : "A field for the element at sr:DevicePrenotification/SMETSCHTSVersion.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "firmwareVersion" : {
            "description" : "A field for the element at sr:DevicePrenotification/FirmwareVersion.",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          },
          "esmeVariant" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EsmeVariant1"
            }, {
              "description" : "A field for the element at sr:DevicePrenotification/ESMEVariant."
            } ]
          },
          "associatedGpfDeviceId" : {
            "description" : "A field for the element at sr:DevicePrenotification/AssociatedGPFDeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrDisplayMessageDto" : {
        "required" : [ "supplierMessage" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "supplierMessage" : {
            "description" : "A field for the element at sr:DisplayMessage/SupplierMessage.",
            "maxLength" : 116,
            "minLength" : 1,
            "pattern" : "^[ -~]+$",
            "type" : "string"
          }
        }
      },
      "SrElecBlockPriceDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:ElecBlockPrice#value",
            "maximum" : 32767,
            "minimum" : -32768,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:ElecBlockPrice#index",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecBlocksDto" : {
        "required" : [ "blockPrice", "index" ],
        "type" : "object",
        "properties" : {
          "blockPrice" : {
            "description" : "A field for the element at sr:ElecBlocks/BlockPrice.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecBlockPriceDto"
            }
          },
          "index" : {
            "description" : "sr:ElecBlocks#index",
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecDayProfilePrimaryDto" : {
        "required" : [ "dayName", "profileSchedule" ],
        "type" : "object",
        "properties" : {
          "dayName" : {
            "description" : "A field for the element at sr:ElecDayProfilePrimary/DayName.",
            "maximum" : 16,
            "minimum" : 1,
            "type" : "integer"
          },
          "profileSchedule" : {
            "description" : "A field for the element at sr:ElecDayProfilePrimary/ProfileSchedule.",
            "maxItems" : 48,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecProfileSchedulePrimaryDto"
            }
          }
        }
      },
      "SrElecDayProfileSecondaryDto" : {
        "required" : [ "dayName", "profileSchedule" ],
        "type" : "object",
        "properties" : {
          "dayName" : {
            "description" : "A field for the element at sr:ElecDayProfileSecondary/DayName.",
            "maximum" : 16,
            "minimum" : 1,
            "type" : "integer"
          },
          "profileSchedule" : {
            "description" : "A field for the element at sr:ElecDayProfileSecondary/ProfileSchedule.",
            "maxItems" : 48,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecProfileScheduleSecondaryDto"
            }
          }
        }
      },
      "SrElecDebtRecoveryDto" : {
        "required" : [ "debtRecoveryRate", "debtRecoveryRatePriceScale", "debtRecoveryRatePeriod" ],
        "type" : "object",
        "properties" : {
          "debtRecoveryRate" : {
            "description" : "A field for the element at sr:ElecDebtRecovery/DebtRecoveryRate.",
            "maximum" : 32767,
            "minimum" : -32768,
            "type" : "integer"
          },
          "debtRecoveryRatePriceScale" : {
            "description" : "A field for the element at sr:ElecDebtRecovery/DebtRecoveryRatePriceScale.",
            "maximum" : 127,
            "minimum" : -128,
            "type" : "integer"
          },
          "debtRecoveryRatePeriod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DebtRecoveryRatePeriod1"
            }, {
              "description" : "A field for the element at sr:ElecDebtRecovery/DebtRecoveryRatePeriod."
            } ]
          }
        }
      },
      "SrElecHybridTariffDto" : {
        "required" : [ "blockPrices", "touPrice" ],
        "type" : "object",
        "properties" : {
          "blockPrices" : {
            "description" : "A field for the element at sr:ElecHybridTariff/BlockPrices.",
            "maxItems" : 8,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecBlocksDto"
            }
          },
          "touPrice" : {
            "description" : "A field for the element at sr:ElecHybridTariff/TOUPrice.",
            "maxItems" : 48,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecPrimaryTOUPriceDto"
            }
          }
        }
      },
      "SrElecPriceElementsPrimaryDto" : {
        "required" : [ "standingCharge", "standingChargeScale", "priceScale" ],
        "type" : "object",
        "properties" : {
          "standingCharge" : {
            "description" : "A field for the element at sr:ElecPriceElementsPrimary/StandingCharge.",
            "maximum" : 32767,
            "minimum" : -32768,
            "type" : "integer"
          },
          "standingChargeScale" : {
            "description" : "A field for the element at sr:ElecPriceElementsPrimary/StandingChargeScale.",
            "maximum" : 127,
            "minimum" : -128,
            "type" : "integer"
          },
          "priceScale" : {
            "description" : "A field for the element at sr:ElecPriceElementsPrimary/PriceScale.",
            "maximum" : 127,
            "minimum" : -128,
            "type" : "integer"
          },
          "blockTariff" : {
            "description" : "A field for the element at sr:ElecPriceElementsPrimary/BlockTariff.",
            "maxItems" : 8,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecBlocksDto"
            }
          },
          "touTariff" : {
            "description" : "A field for the element at sr:ElecPriceElementsPrimary/TOUTariff.",
            "maxItems" : 48,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecPrimaryTOUPriceDto"
            }
          },
          "hybridTariff" : {
            "$ref" : "#/components/schemas/SrElecHybridTariffDto"
          }
        }
      },
      "SrElecPrimaryTOUPriceDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:ElecPrimaryTOUPrice#value",
            "maximum" : 32767,
            "minimum" : -32768,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:ElecPrimaryTOUPrice#index",
            "maximum" : 48,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecProfileSchedulePrimaryDto" : {
        "required" : [ "startTime" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "description" : "A field for the element at sr:ElecProfileSchedulePrimary/StartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "touTariffAction" : {
            "description" : "A field for the element at sr:ElecProfileSchedulePrimary/TOUTariffAction.",
            "maximum" : 48,
            "minimum" : 1,
            "type" : "integer"
          },
          "blockTariffAction" : {
            "description" : "A field for the element at sr:ElecProfileSchedulePrimary/BlockTariffAction.",
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecProfileScheduleSecondaryDto" : {
        "required" : [ "startTime", "touTariffAction" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "description" : "A field for the element at sr:ElecProfileScheduleSecondary/StartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "touTariffAction" : {
            "description" : "A field for the element at sr:ElecProfileScheduleSecondary/TOUTariffAction.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSeasonPrimaryDto" : {
        "required" : [ "seasonName", "seasonStartDate", "referencedWeekName" ],
        "type" : "object",
        "properties" : {
          "seasonName" : {
            "description" : "A field for the element at sr:ElecSeasonPrimary/SeasonName.",
            "maxLength" : 8,
            "type" : "string"
          },
          "seasonStartDate" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "referencedWeekName" : {
            "description" : "A field for the element at sr:ElecSeasonPrimary/ReferencedWeekName.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSeasonSecondaryDto" : {
        "required" : [ "seasonName", "seasonStartDate", "referencedWeekName" ],
        "type" : "object",
        "properties" : {
          "seasonName" : {
            "description" : "A field for the element at sr:ElecSeasonSecondary/SeasonName.",
            "maxLength" : 8,
            "type" : "string"
          },
          "seasonStartDate" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "referencedWeekName" : {
            "description" : "A field for the element at sr:ElecSeasonSecondary/ReferencedWeekName.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSecondaryTOUPriceDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:ElecSecondaryTOUPrice#value",
            "maximum" : 32767,
            "minimum" : -32768,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:ElecSecondaryTOUPrice#index",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSpecialDayPrimaryDto" : {
        "required" : [ "date", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:ElecSpecialDayPrimary/ReferencedDayName.",
            "maximum" : 16,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSpecialDaySecondaryDto" : {
        "required" : [ "date", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:ElecSpecialDaySecondary/ReferencedDayName.",
            "maximum" : 16,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecSwitchingTablePrimaryDto" : {
        "required" : [ "dayProfiles", "weekProfiles", "seasons" ],
        "type" : "object",
        "properties" : {
          "dayProfiles" : {
            "description" : "A field for the element at sr:ElecSwitchingTablePrimary/DayProfiles.",
            "maxItems" : 16,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecDayProfilePrimaryDto"
            }
          },
          "weekProfiles" : {
            "description" : "A field for the element at sr:ElecSwitchingTablePrimary/WeekProfiles.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecWeekProfileDto"
            }
          },
          "seasons" : {
            "description" : "A field for the element at sr:ElecSwitchingTablePrimary/Seasons.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecSeasonPrimaryDto"
            }
          }
        }
      },
      "SrElecSwitchingTableSecondaryDto" : {
        "required" : [ "dayProfiles", "weekProfiles", "seasons" ],
        "type" : "object",
        "properties" : {
          "dayProfiles" : {
            "description" : "A field for the element at sr:ElecSwitchingTableSecondary/DayProfiles.",
            "maxItems" : 16,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecDayProfileSecondaryDto"
            }
          },
          "weekProfiles" : {
            "description" : "A field for the element at sr:ElecSwitchingTableSecondary/WeekProfiles.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecWeekProfileDto"
            }
          },
          "seasons" : {
            "description" : "A field for the element at sr:ElecSwitchingTableSecondary/Seasons.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecSeasonSecondaryDto"
            }
          }
        }
      },
      "SrElecTariffElementsDto" : {
        "required" : [ "currencyUnits", "switchingTable", "specialDays", "thresholdMatrix" ],
        "type" : "object",
        "properties" : {
          "currencyUnits" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CurrencyUnits1"
            }, {
              "description" : "A field for the element at sr:ElecTariffElements/CurrencyUnits."
            } ]
          },
          "switchingTable" : {
            "$ref" : "#/components/schemas/SrElecSwitchingTablePrimaryDto"
          },
          "specialDays" : {
            "description" : "A field for the element at sr:ElecTariffElements/SpecialDays.",
            "maxItems" : 50,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecSpecialDayPrimaryDto"
            }
          },
          "thresholdMatrix" : {
            "description" : "A field for the element at sr:ElecTariffElements/ThresholdMatrix.",
            "maxItems" : 8,
            "minItems" : 8,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecThresholdsDto"
            }
          }
        }
      },
      "SrElecThresholdsDto" : {
        "required" : [ "blockThreshold", "index" ],
        "type" : "object",
        "properties" : {
          "blockThreshold" : {
            "description" : "A field for the element at sr:ElecThresholds/BlockThreshold.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BlockThresholdDto"
            }
          },
          "index" : {
            "description" : "sr:ElecThresholds#index",
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrElecWeekProfileDto" : {
        "required" : [ "weekName", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "weekName" : {
            "description" : "A field for the element at sr:ElecWeekProfile/WeekName.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:ElecWeekProfile/ReferencedDayName. Either the value of the day-of-week (e.g., \\1\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "minItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SrElectricityBillingCalendarDto" : {
        "required" : [ "billingTime" ],
        "type" : "object",
        "properties" : {
          "billingTime" : {
            "description" : "A field for the element at sr:ElectricityBillingCalendar/BillingTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "daily" : {
            "description" : "A field for the element at sr:ElectricityBillingCalendar/Daily.",
            "type" : "boolean"
          },
          "weekly" : {
            "description" : "A field for the element at sr:ElectricityBillingCalendar/Weekly.",
            "maximum" : 7,
            "minimum" : 1,
            "type" : "integer"
          },
          "monthly" : {
            "description" : "A field for the element at sr:ElectricityBillingCalendar/Monthly. Either the value of a billing day-of-month or the dayOfMonthBilling() placeholder (e.g., ${dayOfMonthBilling()} or ${dayOfMonthBilling(offset)})",
            "type" : "string"
          },
          "quarterly" : {
            "$ref" : "#/components/schemas/SrBillingCalendarQSMYDto"
          },
          "sixMonthly" : {
            "$ref" : "#/components/schemas/SrBillingCalendarQSMYDto"
          },
          "yearly" : {
            "$ref" : "#/components/schemas/SrBillingCalendarQSMYDto"
          }
        }
      },
      "SrElectricityNetworkOperatorAlertsDto" : {
        "type" : "object",
        "properties" : {
          "networkOperatorEsmeCommon" : {
            "$ref" : "#/components/schemas/SrNetworkOperatorESMECommonDto"
          },
          "networkOperatorEsmeSinglePhase" : {
            "$ref" : "#/components/schemas/SrNetworkOperatorESMESinglePhaseDto"
          },
          "networkOperatorEsmePolyPhase" : {
            "$ref" : "#/components/schemas/SrNetworkOperatorESMEPolyPhaseDto"
          }
        }
      },
      "SrElectricityNonDisablementCalendarDto" : {
        "required" : [ "electricitySpecialDays", "electricityNonDisablementSchedule" ],
        "type" : "object",
        "properties" : {
          "electricitySpecialDays" : {
            "description" : "A field for the element at sr:ElectricityNonDisablementCalendar/ElectricitySpecialDays.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SpecialDayDto"
            }
          },
          "electricityNonDisablementSchedule" : {
            "description" : "A field for the element at sr:ElectricityNonDisablementCalendar/ElectricityNonDisablementSchedule.",
            "maxItems" : 22,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElectricityNonDisablementScheduleDto"
            }
          }
        }
      },
      "SrElectricityNonDisablementScheduleDto" : {
        "required" : [ "nonDisablementScript", "specialDaysApplicability", "scheduleDatesAndTime" ],
        "type" : "object",
        "properties" : {
          "nonDisablementScript" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonDisablementScript"
            }, {
              "description" : "A field for the element at sr:ElectricityNonDisablementSchedule/NonDisablementScript."
            } ]
          },
          "specialDaysApplicability" : {
            "description" : "A field for the element at sr:ElectricityNonDisablementSchedule/SpecialDaysApplicability.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrSpecialDayApplicabilityDto"
            }
          },
          "daysOfWeekApplicability" : {
            "description" : "A field for the element at sr:ElectricityNonDisablementSchedule/DaysOfWeekApplicability. Either the value of the day-of-week (e.g., \\Monday\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "scheduleDatesAndTime" : {
            "$ref" : "#/components/schemas/SrScheduleDatesAndTimeWithoutWildcardsDto"
          }
        }
      },
      "SrElectricitySupplierAlertsDto" : {
        "type" : "object",
        "properties" : {
          "supplierEsmeCommon" : {
            "$ref" : "#/components/schemas/SrSupplierESMECommonDto"
          },
          "supplierEsmePolyPhase" : {
            "$ref" : "#/components/schemas/SrSupplierESMEPolyPhaseDto"
          }
        }
      },
      "SrGasBillingCalendarDto" : {
        "required" : [ "billingPeriodStart", "periodicity" ],
        "type" : "object",
        "properties" : {
          "billingPeriodStart" : {
            "description" : "A field for the element at sr:GasBillingCalendar/BillingPeriodStart. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "periodicity" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Periodicity"
            }, {
              "description" : "A field for the element at sr:GasBillingCalendar/Periodicity."
            } ]
          }
        }
      },
      "SrGasBlockPriceDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:GasBlockPrice#value",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:GasBlockPrice#index",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasBlockPriceMatrixDto" : {
        "required" : [ "blockPrice", "numberOfThresholds" ],
        "type" : "object",
        "properties" : {
          "blockPrice" : {
            "description" : "A field for the element at sr:GasBlockPriceMatrix/BlockPrice.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasBlockPriceDto"
            }
          },
          "numberOfThresholds" : {
            "description" : "A field for the element at sr:GasBlockPriceMatrix/NumberOfThresholds.",
            "maximum" : 3,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasDateWithWildcardsDto" : {
        "type" : "object",
        "properties" : {
          "year" : {
            "description" : "A field for the element at sr:GasDateWithWildcards/GasYearWithWildcards. Either the specified value of the year, null for a non specified year, or the year() placeholder (e.g., ${year()} or ${year(offset)})",
            "type" : "string"
          },
          "month" : {
            "description" : "A field for the element at sr:GasDateWithWildcards/GasMonthWithWildcards. Either the specified value of the month, null for a non specified month, or the month() placeholder (e.g., ${month()} or ${month(offset)})",
            "type" : "string"
          },
          "dayOfMonth" : {
            "description" : "A field for the element at sr:GasDateWithWildcards/GasDayOfMonthWithWildcards. Either the specified value of the day-of-month, null for a non specified day-of-month, or the dayOfMonth() placeholder (e.g., ${dayOfMonth()} or ${dayOfMonth(offset)})",
            "type" : "string"
          },
          "dayOfWeek" : {
            "description" : "A field for the element at sr:GasDateWithWildcards/GasDayOfWeekWithWildcards. Either the specified value of the day-of-week, null for a non specified day-of-week, or the dayOfWeek() placeholder (e.g., ${dayOfWeek()} or ${dayOfWeek(offset)})",
            "type" : "string"
          }
        }
      },
      "SrGasDayProfileDto" : {
        "required" : [ "dayName" ],
        "type" : "object",
        "properties" : {
          "dayName" : {
            "description" : "A field for the element at sr:GasDayProfile/DayName.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          },
          "touTariffAction" : {
            "description" : "A field for the element at sr:GasDayProfile/TOUTariffAction.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          },
          "blockTariff" : {
            "description" : "A field for the element at sr:GasDayProfile/BlockTariff.",
            "type" : "boolean"
          }
        }
      },
      "SrGasDebtRecoveryDto" : {
        "required" : [ "debtRecoveryRate", "debtRecoveryRatePeriod" ],
        "type" : "object",
        "properties" : {
          "debtRecoveryRate" : {
            "description" : "A field for the element at sr:GasDebtRecovery/DebtRecoveryRate.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "debtRecoveryRatePeriod" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DebtRecoveryRatePeriod"
            }, {
              "description" : "A field for the element at sr:GasDebtRecovery/DebtRecoveryRatePeriod."
            } ]
          }
        }
      },
      "SrGasNonDisablementCalendarDto" : {
        "required" : [ "dayProfiles", "weekProfiles", "seasonProfiles", "specialDays" ],
        "type" : "object",
        "properties" : {
          "dayProfiles" : {
            "description" : "A field for the element at sr:GasNonDisablementCalendar/DayProfiles.",
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasNonDisablementDayProfileDto"
            }
          },
          "weekProfiles" : {
            "description" : "A field for the element at sr:GasNonDisablementCalendar/WeekProfiles.",
            "maxItems" : 2,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrWeekProfileGasNonDisablementDto"
            }
          },
          "seasonProfiles" : {
            "description" : "A field for the element at sr:GasNonDisablementCalendar/SeasonProfiles.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasSeasonNonDisablementDto"
            }
          },
          "specialDays" : {
            "description" : "A field for the element at sr:GasNonDisablementCalendar/SpecialDays.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasSpecialDayNonDisablementDto"
            }
          }
        }
      },
      "SrGasNonDisablementDayProfileDto" : {
        "required" : [ "timeStartAction", "gasDayName" ],
        "type" : "object",
        "properties" : {
          "timeStartAction" : {
            "description" : "A field for the element at sr:GasNonDisablementDayProfile/TimeStartAction.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasNonDisablementTimeStartActionDto"
            }
          },
          "gasDayName" : {
            "description" : "A field for the element at sr:GasNonDisablementDayProfile/GasDayName.",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasNonDisablementTimeStartActionDto" : {
        "required" : [ "startTime", "nonDisablementAction" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "description" : "A field for the element at sr:GasNonDisablementTimeStartAction/StartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "nonDisablementAction" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NonDisablementAction"
            }, {
              "description" : "A field for the element at sr:GasNonDisablementTimeStartAction/NonDisablementAction."
            } ]
          }
        }
      },
      "SrGasPriceElementsDto" : {
        "required" : [ "currencyUnits", "standingCharge" ],
        "type" : "object",
        "properties" : {
          "currencyUnits" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CurrencyUnits"
            }, {
              "description" : "A field for the element at sr:GasPriceElements/CurrencyUnits."
            } ]
          },
          "standingCharge" : {
            "description" : "A field for the element at sr:GasPriceElements/StandingCharge.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "blockTariff" : {
            "$ref" : "#/components/schemas/SrGasBlockPriceMatrixDto"
          },
          "touTariff" : {
            "description" : "A field for the element at sr:GasPriceElements/TOUTariff.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasTOUPriceDto"
            }
          }
        }
      },
      "SrGasSeasonDto" : {
        "required" : [ "seasonStartDate", "referencedWeekName" ],
        "type" : "object",
        "properties" : {
          "seasonStartDate" : {
            "$ref" : "#/components/schemas/SrGasDateWithWildcardsDto"
          },
          "referencedWeekName" : {
            "description" : "A field for the element at sr:GasSeason/ReferencedWeekName.",
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasSeasonNonDisablementDto" : {
        "required" : [ "seasonStartDate", "referencedWeekName" ],
        "type" : "object",
        "properties" : {
          "seasonStartDate" : {
            "$ref" : "#/components/schemas/SrGasDateWithWildcardsDto"
          },
          "referencedWeekName" : {
            "description" : "A field for the element at sr:GasSeasonNonDisablement/ReferencedWeekName.",
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasSpecialDayDto" : {
        "required" : [ "date", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/SrGasDateWithWildcardsDto"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:GasSpecialDay/ReferencedDayName.",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasSpecialDayNonDisablementDto" : {
        "required" : [ "date", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "date" : {
            "$ref" : "#/components/schemas/SrGasDateWithWildcardsDto"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:GasSpecialDayNonDisablement/ReferencedDayName.",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasSwitchingTableDto" : {
        "required" : [ "dayProfiles", "weekProfiles", "seasons" ],
        "type" : "object",
        "properties" : {
          "dayProfiles" : {
            "description" : "A field for the element at sr:GasSwitchingTable/DayProfiles.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasDayProfileDto"
            }
          },
          "weekProfiles" : {
            "description" : "A field for the element at sr:GasSwitchingTable/WeekProfiles.",
            "maxItems" : 2,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrWeekProfileGasDto"
            }
          },
          "seasons" : {
            "description" : "A field for the element at sr:GasSwitchingTable/Seasons.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasSeasonDto"
            }
          }
        }
      },
      "SrGasTOUPriceDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:GasTOUPrice#value",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:GasTOUPrice#index",
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrGasTariffElementsDto" : {
        "required" : [ "switchingTable", "specialDays", "thresholdMatrix" ],
        "type" : "object",
        "properties" : {
          "switchingTable" : {
            "$ref" : "#/components/schemas/SrGasSwitchingTableDto"
          },
          "specialDays" : {
            "description" : "A field for the element at sr:GasTariffElements/SpecialDays.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasSpecialDayDto"
            }
          },
          "thresholdMatrix" : {
            "description" : "A field for the element at sr:GasTariffElements/ThresholdMatrix.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrGasThresholdDto"
            }
          }
        }
      },
      "SrGasThresholdDto" : {
        "required" : [ "value", "index" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "sr:GasThreshold#value",
            "maximum" : 281474976710656,
            "minimum" : 0,
            "type" : "integer"
          },
          "index" : {
            "description" : "sr:GasThreshold#index",
            "maximum" : 3,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrImportMPANsDto" : {
        "required" : [ "importMpan" ],
        "type" : "object",
        "properties" : {
          "importMpan" : {
            "description" : "A field for the element at sr:ImportMPANs/ImportMPAN.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          },
          "secondaryImportMpan" : {
            "description" : "A field for the element at sr:ImportMPANs/SecondaryImportMPAN.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          }
        }
      },
      "SrIssueSecurityCredentialsDto" : {
        "required" : [ "credentialType" ],
        "type" : "object",
        "properties" : {
          "credentialType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CredentialType1"
            }, {
              "description" : "A field for the element at sr:IssueSecurityCredentials/CredentialType."
            } ]
          }
        }
      },
      "SrJoinOrUnjoinDeviceDto" : {
        "required" : [ "otherDeviceId" ],
        "type" : "object",
        "properties" : {
          "otherDeviceId" : {
            "description" : "A field for the element at sr:JoinOrUnjoinDevice/OtherDeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrLimitAPCLevelDto" : {
        "required" : [ "startDateTime", "endDateTime", "commandedStateLevel", "auxiliaryControllerN" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "description" : "A field for the element at sr:LimitAPCLevel/StartDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "endDateTime" : {
            "description" : "A field for the element at sr:LimitAPCLevel/EndDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "commandedStateLevel" : {
            "description" : "A field for the element at sr:LimitAPCLevel/CommandedStateLevel.",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "inputFromControlledLoad" : {
            "description" : "A field for the element at sr:LimitAPCLevel/InputFromControlledLoad.",
            "type" : "boolean"
          },
          "auxiliaryControllerN" : {
            "description" : "sr:LimitAPCLevel#auxiliaryControllerN",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrMaximumDemandTimePeriodScheduleDto" : {
        "required" : [ "startTime", "endTime" ],
        "type" : "object",
        "properties" : {
          "startTime" : {
            "description" : "A field for the element at sr:MaximumDemandTimePeriodSchedule/StartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "endTime" : {
            "description" : "A field for the element at sr:MaximumDemandTimePeriodSchedule/EndTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          }
        }
      },
      "SrMeterMPxNsDto" : {
        "required" : [ "importMpxn" ],
        "type" : "object",
        "properties" : {
          "importMpxn" : {
            "description" : "A field for the element at sr:MeterMPxNs/ImportMPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "secondaryImportMpan" : {
            "description" : "A field for the element at sr:MeterMPxNs/SecondaryImportMPAN.",
            "minLength" : 13,
            "type" : "string"
          },
          "exportMpan" : {
            "description" : "A field for the element at sr:MeterMPxNs/ExportMPAN.",
            "minLength" : 13,
            "type" : "string"
          }
        }
      },
      "SrNetworkOperatorESMECommonDto" : {
        "type" : "object",
        "properties" : {
          "x8014" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8014"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMECommon/x8014."
            } ]
          },
          "x8015" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8015"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMECommon/x8015."
            } ]
          }
        }
      },
      "SrNetworkOperatorESMEPolyPhaseDto" : {
        "type" : "object",
        "properties" : {
          "x8003" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8003"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8003."
            } ]
          },
          "x8004" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8004"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8004."
            } ]
          },
          "x8005" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8005"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8005."
            } ]
          },
          "x8007" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8007"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8007."
            } ]
          },
          "x8008" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8008"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8008."
            } ]
          },
          "x8009" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8009"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8009."
            } ]
          },
          "x8021" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8021"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8021."
            } ]
          },
          "x8022" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8022"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8022."
            } ]
          },
          "x8023" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8023"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8023."
            } ]
          },
          "x8025" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8025"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8025."
            } ]
          },
          "x8026" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8026"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8026."
            } ]
          },
          "x8027" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8027"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8027."
            } ]
          },
          "x8029" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8029"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8029."
            } ]
          },
          "x802A" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802a"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x802A."
            } ]
          },
          "x802B" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802b"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x802B."
            } ]
          },
          "x802D" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802d"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x802D."
            } ]
          },
          "x802E" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802e"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x802E."
            } ]
          },
          "x802F" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802f"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x802F."
            } ]
          },
          "x8086" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8086"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8086."
            } ]
          },
          "x8087" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8087"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8087."
            } ]
          },
          "x8088" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8088"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8088."
            } ]
          },
          "x808A" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808a"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x808A."
            } ]
          },
          "x808B" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808b"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x808B."
            } ]
          },
          "x808C" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808c"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x808C."
            } ]
          },
          "x808E" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808e"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x808E."
            } ]
          },
          "x808F" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808f"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x808F."
            } ]
          },
          "x8090" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8090"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8090."
            } ]
          },
          "x8092" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8092"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8092."
            } ]
          },
          "x8093" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8093"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8093."
            } ]
          },
          "x8094" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8094"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8094."
            } ]
          },
          "x8096" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8096"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8096."
            } ]
          },
          "x8097" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8097"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8097."
            } ]
          },
          "x8098" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8098"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8098."
            } ]
          },
          "x809A" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X809a"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x809A."
            } ]
          },
          "x809B" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X809b"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x809B."
            } ]
          },
          "x809C" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X809c"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x809C."
            } ]
          },
          "x8011" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8011"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8011."
            } ]
          },
          "x8016" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8016"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8016."
            } ]
          },
          "x8013" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8013"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMEPolyPhase/x8013."
            } ]
          }
        }
      },
      "SrNetworkOperatorESMESinglePhaseDto" : {
        "type" : "object",
        "properties" : {
          "x8002" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8002"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8002."
            } ]
          },
          "x8006" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8006"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8006."
            } ]
          },
          "x8020" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8020"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8020."
            } ]
          },
          "x8024" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8024"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8024."
            } ]
          },
          "x8028" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8028"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8028."
            } ]
          },
          "x802C" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X802c"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x802C."
            } ]
          },
          "x8085" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8085"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8085."
            } ]
          },
          "x8089" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8089"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8089."
            } ]
          },
          "x808D" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X808d"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x808D."
            } ]
          },
          "x8091" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8091"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8091."
            } ]
          },
          "x8095" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8095"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8095."
            } ]
          },
          "x8099" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8099"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8099."
            } ]
          },
          "x8010" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8010"
            }, {
              "description" : "A field for the element at sr:NetworkOperatorESMESinglePhase/x8010."
            } ]
          }
        }
      },
      "SrPartialAddressDto" : {
        "required" : [ "postCode", "addressIdentifier" ],
        "type" : "object",
        "properties" : {
          "postCode" : {
            "description" : "A field for the element at sr:PartialAddress/PostCode.",
            "maxLength" : 8,
            "minLength" : 6,
            "type" : "string"
          },
          "addressIdentifier" : {
            "description" : "A field for the element at sr:PartialAddress/AddressIdentifier.",
            "maxLength" : 30,
            "type" : "string"
          }
        }
      },
      "SrPolyPhaseVoltageSettingsDto" : {
        "required" : [ "phase", "phaseVoltageSettings" ],
        "type" : "object",
        "properties" : {
          "phase" : {
            "description" : "A field for the element at sr:PolyPhaseVoltageSettings/Phase.",
            "maximum" : 3,
            "minimum" : 1,
            "type" : "integer"
          },
          "phaseVoltageSettings" : {
            "$ref" : "#/components/schemas/SrAverageRMSVoltageSettingsDto"
          }
        }
      },
      "SrPricePrimaryDto" : {
        "type" : "object",
        "properties" : {
          "electricityPriceElements" : {
            "$ref" : "#/components/schemas/SrElecPriceElementsPrimaryDto"
          },
          "gasPriceElements" : {
            "$ref" : "#/components/schemas/SrGasPriceElementsDto"
          }
        }
      },
      "SrPriceSecondaryDto" : {
        "required" : [ "priceScale", "electricityPriceElement" ],
        "type" : "object",
        "properties" : {
          "priceScale" : {
            "description" : "A field for the element at sr:PriceSecondary/PriceScale.",
            "maximum" : 127,
            "minimum" : -128,
            "type" : "integer"
          },
          "electricityPriceElement" : {
            "description" : "A field for the element at sr:PriceSecondary/ElectricityPriceElement.",
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecSecondaryTOUPriceDto"
            }
          }
        }
      },
      "SrPropertyFilterDto" : {
        "required" : [ "postCode", "addressIdentifier" ],
        "type" : "object",
        "properties" : {
          "postCode" : {
            "description" : "A field for the element at sr:PropertyFilter/PostCode.",
            "maxLength" : 8,
            "minLength" : 6,
            "type" : "string"
          },
          "addressIdentifier" : {
            "description" : "A field for the element at sr:PropertyFilter/AddressIdentifier.",
            "maxLength" : 30,
            "type" : "string"
          }
        }
      },
      "SrRMSVoltageSettingsDto" : {
        "required" : [ "rmsExtremeOverVoltageMeasurementPeriod", "rmsExtremeOverVoltageThreshold", "rmsExtremeUnderVoltageMeasurementPeriod", "rmsExtremeUnderVoltageThreshold", "rmsVoltageSagMeasurementPeriod", "rmsVoltageSagThreshold", "rmsVoltageSwellMeasurementPeriod", "rmsVoltageSwellThreshold" ],
        "type" : "object",
        "properties" : {
          "rmsExtremeOverVoltageMeasurementPeriod" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSExtremeOverVoltageMeasurementPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsExtremeOverVoltageThreshold" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSExtremeOverVoltageThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsExtremeUnderVoltageMeasurementPeriod" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSExtremeUnderVoltageMeasurementPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsExtremeUnderVoltageThreshold" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSExtremeUnderVoltageThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsVoltageSagMeasurementPeriod" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSVoltageSagMeasurementPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsVoltageSagThreshold" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSVoltageSagThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsVoltageSwellMeasurementPeriod" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSVoltageSwellMeasurementPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rmsVoltageSwellThreshold" : {
            "description" : "A field for the element at sr:RMSVoltageSettings/RMSVoltageSwellThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrReadALCSDataDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadAuxiliaryControllerConfigurationDataDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadAuxiliaryControllerOperationalDataDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadCHFSubGHzChannelLogDto" : {
        "required" : [ "readLogPeriod" ],
        "type" : "object",
        "properties" : {
          "readLogPeriod" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodDto"
          }
        }
      },
      "SrReadDataOnDemandOrFutureDatedDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadDeviceLogDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "readSecurityDetails" : {
            "description" : "A field for the element at sr:ReadDeviceLog/ReadSecurityDetails.",
            "type" : "boolean"
          }
        }
      },
      "SrReadEventOrSecurityLogDto" : {
        "required" : [ "readLogPeriod", "logToRead" ],
        "type" : "object",
        "properties" : {
          "readLogPeriod" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodDto"
          },
          "logToRead" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LogToRead"
            }, {
              "description" : "A field for the element at sr:ReadEventOrSecurityLog/LogToRead."
            } ]
          }
        }
      },
      "SrReadFirmwareVersionDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadInstantaneousImportRegistersDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadInventoryDto" : {
        "type" : "object",
        "properties" : {
          "uprn" : {
            "description" : "A field for the element at sr:ReadInventory/UPRN.",
            "maximum" : 999999999999,
            "minimum" : 1,
            "type" : "integer"
          },
          "deviceId" : {
            "description" : "A field for the element at sr:ReadInventory/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "mpxn" : {
            "description" : "A field for the element at sr:ReadInventory/MPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "propertyFilter" : {
            "$ref" : "#/components/schemas/SrPropertyFilterDto"
          }
        }
      },
      "SrReadLogFutureDatableAndURPCredentialsDto" : {
        "required" : [ "readLogPeriod" ],
        "type" : "object",
        "properties" : {
          "readLogPeriod" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodDto"
          },
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "kaPublicSecurityCredentials" : {
            "description" : "A field for the element at sr:ReadLogFutureDatableAndURPCredentials/KAPublicSecurityCredentials. Either the Key Agreement public security credentials or the kaOrgCertificate() placeholder (e.g., $'{'kaOrgCertificate(suName)'}')",
            "type" : "string"
          }
        }
      },
      "SrReadLogFutureDatableDto" : {
        "required" : [ "readLogPeriod" ],
        "type" : "object",
        "properties" : {
          "readLogPeriod" : {
            "$ref" : "#/components/schemas/SrReadLogPeriodDto"
          },
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadLogPeriodDto" : {
        "required" : [ "startDateTime", "endDateTime" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "description" : "A field for the element at sr:ReadLogPeriod/StartDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "endDateTime" : {
            "description" : "A field for the element at sr:ReadLogPeriod/EndDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadLogPeriodOffsetDto" : {
        "required" : [ "startDateOffset", "startTime", "endDateOffset", "endTime" ],
        "type" : "object",
        "properties" : {
          "startDateOffset" : {
            "description" : "A field for the element at sr:ReadLogPeriodOffset/StartDateOffset.",
            "maximum" : 0,
            "minimum" : -400,
            "type" : "integer"
          },
          "startTime" : {
            "description" : "A field for the element at sr:ReadLogPeriodOffset/StartTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "endDateOffset" : {
            "description" : "A field for the element at sr:ReadLogPeriodOffset/EndDateOffset.",
            "maximum" : 0,
            "minimum" : -400,
            "type" : "integer"
          },
          "endTime" : {
            "description" : "A field for the element at sr:ReadLogPeriodOffset/EndTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          }
        }
      },
      "SrReadScheduleDto" : {
        "type" : "object",
        "properties" : {
          "dspScheduleId" : {
            "description" : "A field for the element at sr:ReadSchedule/DSPScheduleID.",
            "maximum" : 1000000000000,
            "minimum" : 0,
            "type" : "integer"
          },
          "deviceId" : {
            "description" : "A field for the element at sr:ReadSchedule/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrRemoveAuxiliaryLoadFromBoostButtonDto" : {
        "required" : [ "removeFromBoostButton" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "removeFromBoostButton" : {
            "description" : "A field for the element at sr:RemoveAuxiliaryLoadFromBoostButton/RemoveFromBoostButton.",
            "maxItems" : 5,
            "minItems" : 5,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoveFromBoostButtonDto"
            }
          }
        }
      },
      "SrReplacementCertificatesACBDto" : {
        "required" : [ "keyAgreementCertificate" ],
        "type" : "object",
        "properties" : {
          "digitalSigningCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesACB/DigitalSigningCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesACB/KeyAgreementCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrReplacementCertificatesCoSDto" : {
        "required" : [ "digitalSigningCertificate" ],
        "type" : "object",
        "properties" : {
          "digitalSigningCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesCoS/DigitalSigningCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesCoS/KeyAgreementCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementTopUpCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesCoS/KeyAgreementTopUpCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrReplacementCertificatesDCCHandoverDto" : {
        "required" : [ "digitalSigningCertificate" ],
        "type" : "object",
        "properties" : {
          "digitalSigningCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesDCCHandover/DigitalSigningCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesDCCHandover/KeyAgreementCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementTopUpCertificate" : {
            "description" : "A field for the element at sr:ReplacementCertificatesDCCHandover/KeyAgreementTopUpCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrReplacementCertificatesKRPDto" : {
        "type" : "object",
        "properties" : {
          "supplierOrNetworkOperatorCertificates" : {
            "$ref" : "#/components/schemas/SrSupplierOrNetworkOperatorCertificatesKRPDto"
          },
          "rootCertificate" : {
            "$ref" : "#/components/schemas/SrRootCertificateKRPDto"
          }
        }
      },
      "SrRequestHandoverOfDCCControlledDeviceDto" : {
        "required" : [ "remotePartyRole", "replacementCertificates", "certificationPathCertificates", "applyTimeBasedCpvChecks" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "remotePartyRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RemotePartyRole1"
            }, {
              "description" : "A field for the element at sr:RequestHandoverOfDCCControlledDevice/RemotePartyRole."
            } ]
          },
          "remotePartyFloorSeqNumber" : {
            "description" : "A field for the element at sr:RequestHandoverOfDCCControlledDevice/RemotePartyFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "remotePartyPrepaymentTopUpFloorSeqNumber" : {
            "description" : "A field for the element at sr:RequestHandoverOfDCCControlledDevice/RemotePartyPrepaymentTopUpFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "replacementCertificates" : {
            "$ref" : "#/components/schemas/SrReplacementCertificatesDCCHandoverDto"
          },
          "certificationPathCertificates" : {
            "description" : "A field for the element at sr:RequestHandoverOfDCCControlledDevice/CertificationPathCertificates.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "applyTimeBasedCpvChecks" : {
            "description" : "A field for the element at sr:RequestHandoverOfDCCControlledDevice/ApplyTimeBasedCPVChecks.",
            "type" : "boolean"
          }
        }
      },
      "SrRequestWANMatrixDto" : {
        "type" : "object",
        "properties" : {
          "uprn" : {
            "description" : "A field for the element at sr:RequestWANMatrix/UPRN.",
            "maximum" : 999999999999,
            "minimum" : 1,
            "type" : "integer"
          },
          "partialAddress" : {
            "$ref" : "#/components/schemas/SrPartialAddressDto"
          }
        }
      },
      "SrResetALCSHCALCSDto" : {
        "required" : [ "index" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "description" : "sr:ResetALCSHCALCS#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrResetAuxiliaryLoadDto" : {
        "required" : [ "resetAlcsHcalcs" ],
        "type" : "object",
        "properties" : {
          "resetAlcsHcalcs" : {
            "$ref" : "#/components/schemas/SrResetALCSHCALCSDto"
          }
        }
      },
      "SrResetMaximumDemandRegistersDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "maxDemandActivePowerImportValue" : {
            "description" : "A field for the element at sr:ResetMaximumDemandRegisters/MaxDemandActivePowerImportValue.",
            "type" : "boolean"
          },
          "maxDemandActivePowerExportValue" : {
            "description" : "A field for the element at sr:ResetMaximumDemandRegisters/MaxDemandActivePowerExportValue.",
            "type" : "boolean"
          },
          "maxDemandConfigTimeActivePowerImportValue" : {
            "description" : "A field for the element at sr:ResetMaximumDemandRegisters/MaxDemandConfigTimeActivePowerImportValue.",
            "type" : "boolean"
          }
        }
      },
      "SrRestoreGPFDeviceLogDto" : {
        "required" : [ "oldGpfId" ],
        "type" : "object",
        "properties" : {
          "oldGpfId" : {
            "description" : "A field for the element at sr:RestoreGPFDeviceLog/OldGPFID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrRestoreHANDeviceLogDto" : {
        "required" : [ "oldChfId" ],
        "type" : "object",
        "properties" : {
          "oldChfId" : {
            "description" : "A field for the element at sr:RestoreHANDeviceLog/OldCHFID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          }
        }
      },
      "SrRestrictAccessForChangeOfTenancyDto" : {
        "required" : [ "restrictionDateTime" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "restrictionDateTime" : {
            "description" : "A field for the element at sr:RestrictAccessForChangeOfTenancy/RestrictionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrRetrieveDeviceSecurityCredentialsDeviceDto" : {
        "required" : [ "credentialType" ],
        "type" : "object",
        "properties" : {
          "credentialType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CredentialType"
            }, {
              "description" : "A field for the element at sr:RetrieveDeviceSecurityCredentialsDevice/CredentialType."
            } ]
          }
        }
      },
      "SrRetrieveDeviceSecurityCredentialsKRPDto" : {
        "required" : [ "remotePartyRole" ],
        "type" : "object",
        "properties" : {
          "remotePartyRole" : {
            "description" : "A field for the element at sr:RetrieveDeviceSecurityCredentialsKRP/RemotePartyRole.",
            "maxItems" : 7,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemotePartyRole"
            }
          }
        }
      },
      "SrReturnLocalCommandResponseDto" : {
        "required" : [ "deviceGbcsResponse" ],
        "type" : "object",
        "properties" : {
          "originalRequestId" : {
            "description" : "A field for the element at sr:ReturnLocalCommandResponse/OriginalRequestID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          },
          "deviceGbcsResponse" : {
            "description" : "A field for the element at sr:ReturnLocalCommandResponse/DeviceGBCSResponse.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrRootCertificateKRPDto" : {
        "required" : [ "keyCertificateSigning" ],
        "type" : "object",
        "properties" : {
          "keyCertificateSigning" : {
            "description" : "A field for the element at sr:RootCertificateKRP/KeyCertificateSigning.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrScheduleDatesAndTimeDto" : {
        "required" : [ "switchTime", "startDate", "endDate" ],
        "type" : "object",
        "properties" : {
          "switchTime" : {
            "description" : "A field for the element at sr:ScheduleDatesAndTime/SwitchTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "startDate" : {
            "$ref" : "#/components/schemas/SrDateDto"
          },
          "endDate" : {
            "$ref" : "#/components/schemas/SrDateDto"
          }
        }
      },
      "SrScheduleDatesAndTimeWithoutWildcardsDto" : {
        "required" : [ "switchTime", "startDate", "endDate" ],
        "type" : "object",
        "properties" : {
          "switchTime" : {
            "description" : "A field for the element at sr:ScheduleDatesAndTimeWithoutWildcards/SwitchTime. Either the value of a xs:time or the time() placeholder (e.g., ${time()} or ${time(offset)})",
            "type" : "string"
          },
          "startDate" : {
            "description" : "A field for the element at sr:ScheduleDatesAndTimeWithoutWildcards/StartDate. Either the value of a xs:date or the date() placeholder (e.g., ${date()} or ${date(offset)})",
            "type" : "string"
          },
          "endDate" : {
            "description" : "A field for the element at sr:ScheduleDatesAndTimeWithoutWildcards/EndDate. Either the value of a xs:date or the date() placeholder (e.g., ${date()} or ${date(offset)})",
            "type" : "string"
          }
        }
      },
      "SrServiceOptInDto" : {
        "required" : [ "deviceId", "deviceType", "mpxns", "optInDate" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:ServiceOptIn/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "deviceType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DeviceType"
            }, {
              "description" : "A field for the element at sr:ServiceOptIn/DeviceType."
            } ]
          },
          "mpxns" : {
            "$ref" : "#/components/schemas/SrMeterMPxNsDto"
          },
          "optInDate" : {
            "description" : "A field for the element at sr:ServiceOptIn/OptInDate. Either the value of a xs:date or the date() placeholder (e.g., ${date()} or ${date(offset)})",
            "type" : "string"
          }
        }
      },
      "SrServiceOptOutDto" : {
        "required" : [ "executionDateTime", "acbFloorSeqNumber", "replacementCertificates", "certificationPathCertificates", "applyTimeBasedCpvChecks" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:MandatoryFutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "acbFloorSeqNumber" : {
            "description" : "A field for the element at sr:ServiceOptOut/ACBFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "replacementCertificates" : {
            "$ref" : "#/components/schemas/SrReplacementCertificatesACBDto"
          },
          "certificationPathCertificates" : {
            "description" : "A field for the element at sr:ServiceOptOut/CertificationPathCertificates.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "applyTimeBasedCpvChecks" : {
            "description" : "A field for the element at sr:ServiceOptOut/ApplyTimeBasedCPVChecks.",
            "type" : "boolean"
          }
        }
      },
      "SrSetAuxiliaryControllerStateDto" : {
        "required" : [ "startDateTime", "endDateTime", "commandedStateLevel", "auxiliaryControllerN" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "description" : "A field for the element at sr:SetAuxiliaryControllerState/StartDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "endDateTime" : {
            "description" : "A field for the element at sr:SetAuxiliaryControllerState/EndDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "commandedStateLevel" : {
            "description" : "A field for the element at sr:SetAuxiliaryControllerState/CommandedStateLevel.",
            "maximum" : 100,
            "minimum" : 0,
            "type" : "integer"
          },
          "inputFromControlledLoad" : {
            "description" : "A field for the element at sr:SetAuxiliaryControllerState/InputFromControlledLoad.",
            "type" : "boolean"
          },
          "auxiliaryControllerN" : {
            "description" : "sr:SetAuxiliaryControllerState#auxiliaryControllerN",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrSetDeviceConfiguratinExportMPANDto" : {
        "required" : [ "exportMpan" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "exportMpan" : {
            "description" : "A field for the element at sr:SetDeviceConfiguratinExportMPAN/ExportMPAN.",
            "maxLength" : 13,
            "minLength" : 13,
            "type" : "string"
          }
        }
      },
      "SrSetDeviceConfigurationImportMPxNDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "importMpans" : {
            "$ref" : "#/components/schemas/SrImportMPANsDto"
          },
          "importMprn" : {
            "description" : "A field for the element at sr:SetDeviceConfigurationImportMPxN/ImportMPRN.",
            "maxLength" : 10,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "SrSetElectricitySupplyTamperStateDto" : {
        "required" : [ "supplyTamperState" ],
        "type" : "object",
        "properties" : {
          "supplyTamperState" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupplyTamperState"
            }, {
              "description" : "A field for the element at sr:SetElectricitySupplyTamperState/SupplyTamperState."
            } ]
          }
        }
      },
      "SrSetMaximumDemandConfigurableTimePeriodDto" : {
        "required" : [ "maximumDemandTimePeriodSchedule" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "maximumDemandTimePeriodSchedule" : {
            "$ref" : "#/components/schemas/SrMaximumDemandTimePeriodScheduleDto"
          }
        }
      },
      "SrSetRandomisedOffsetLimitDto" : {
        "required" : [ "randomisedOffsetLimit" ],
        "type" : "object",
        "properties" : {
          "randomisedOffsetLimit" : {
            "description" : "A field for the element at sr:SetRandomisedOffsetLimit/RandomisedOffsetLimit.",
            "maximum" : 1799,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrSpecialDayApplicabilityDto" : {
        "required" : [ "specialDayId" ],
        "type" : "object",
        "properties" : {
          "specialDayId" : {
            "description" : "A field for the element at sr:SpecialDayApplicability/SpecialDayID.",
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrSubGHzConfigurationDto" : {
        "required" : [ "lowerBandSubGhzChannels0To26", "lowerBandSubGhzChannels27To34", "lowerBandSubGhzChannels35To61", "upperBandSubGhzChannels0To26", "normalLimitedDutyCycleThreshold", "limitedCriticalDutyCycleThreshold", "maximumSubGhzChannelChangesPerWeek", "gsmeCurfew", "channelQuieterThreshold", "channelNoisierThreshold", "nonGsmePoorCommsPercentageThreshold", "nonGsmePoorCommsMeasurementPeriods", "localChNoiseMeasurementPeriod", "localChFailurePercentage", "localChRetryPercentage" ],
        "type" : "object",
        "properties" : {
          "lowerBandSubGhzChannels0To26" : {
            "$ref" : "#/components/schemas/SrChannels0To26Dto"
          },
          "lowerBandSubGhzChannels27To34" : {
            "$ref" : "#/components/schemas/SrChannels27To34Dto"
          },
          "lowerBandSubGhzChannels35To61" : {
            "$ref" : "#/components/schemas/SrChannels35To61Dto"
          },
          "upperBandSubGhzChannels0To26" : {
            "$ref" : "#/components/schemas/SrChannels0To26Dto"
          },
          "normalLimitedDutyCycleThreshold" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/NormalLimitedDutyCycleThreshold.",
            "maximum" : 2,
            "minimum" : 0.5,
            "type" : "number"
          },
          "limitedCriticalDutyCycleThreshold" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/LimitedCriticalDutyCycleThreshold.",
            "maximum" : 2.5,
            "minimum" : 1.5,
            "type" : "number"
          },
          "maximumSubGhzChannelChangesPerWeek" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/MaximumSubGHzChannelChangesPerWeek.",
            "maximum" : 7,
            "minimum" : 1,
            "type" : "integer"
          },
          "gsmeCurfew" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/GSMECurfew.",
            "maximum" : 65535,
            "minimum" : 2,
            "type" : "integer"
          },
          "channelQuieterThreshold" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/ChannelQuieterThreshold.",
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer"
          },
          "channelNoisierThreshold" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/ChannelNoisierThreshold.",
            "maximum" : 20,
            "minimum" : 0,
            "type" : "integer"
          },
          "nonGsmePoorCommsPercentageThreshold" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/NonGSMEPoorCommsPercentageThreshold.",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "number"
          },
          "nonGsmePoorCommsMeasurementPeriods" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/NonGSMEPoorCommsMeasurementPeriods.",
            "maximum" : 150,
            "minimum" : 50,
            "type" : "integer"
          },
          "localChNoiseMeasurementPeriod" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/LocalCHNoiseMeasurementPeriod.",
            "maximum" : 65535,
            "minimum" : 61,
            "type" : "integer"
          },
          "localChFailurePercentage" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/LocalCHFailurePercentage.",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "number"
          },
          "localChRetryPercentage" : {
            "description" : "A field for the element at sr:SubGHzConfiguration/LocalCHRetryPercentage.",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "number"
          }
        }
      },
      "SrSupplierESMECommonDto" : {
        "type" : "object",
        "properties" : {
          "x810D" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X810d1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x810D."
            } ]
          },
          "x810E" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X810e1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x810E."
            } ]
          },
          "x8119" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81191"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8119."
            } ]
          },
          "x8145" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81451"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8145."
            } ]
          },
          "x8154" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81541"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8154."
            } ]
          },
          "x8155" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81551"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8155."
            } ]
          },
          "x8161" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8161"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8161."
            } ]
          },
          "x8162" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8162"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8162."
            } ]
          },
          "x8168" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81681"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8168."
            } ]
          },
          "x8183" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81831"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x8183."
            } ]
          },
          "x81A0" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a0"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A0."
            } ]
          },
          "x81A1" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a11"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A1."
            } ]
          },
          "x81A2" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a2"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A2."
            } ]
          },
          "x81A3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a3"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A3."
            } ]
          },
          "x81A4" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a41"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A4."
            } ]
          },
          "x81A5" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a51"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A5."
            } ]
          },
          "x81A6" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a61"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A6."
            } ]
          },
          "x81A7" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a71"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A7."
            } ]
          },
          "x81A8" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a81"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A8."
            } ]
          },
          "x81A9" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a91"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81A9."
            } ]
          },
          "x81AA" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81aa1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AA."
            } ]
          },
          "x81AB" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ab1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AB."
            } ]
          },
          "x81AC" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ac1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AC."
            } ]
          },
          "x81AD" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ad1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AD."
            } ]
          },
          "x81AE" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ae1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AE."
            } ]
          },
          "x81AF" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81af1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81AF."
            } ]
          },
          "x81B0" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b01"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B0."
            } ]
          },
          "x81B1" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b11"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B1."
            } ]
          },
          "x81B2" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b21"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B2."
            } ]
          },
          "x81B3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b31"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B3."
            } ]
          },
          "x81B8" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b8"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B8."
            } ]
          },
          "x81B9" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b91"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81B9."
            } ]
          },
          "x81BA" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ba1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81BA."
            } ]
          },
          "x81BB" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bb"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81BB."
            } ]
          },
          "x81BC" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bc1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81BC."
            } ]
          },
          "x81BD" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bd1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81BD."
            } ]
          },
          "x81BE" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81be1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81BE."
            } ]
          },
          "x81C0" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c01"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81C0."
            } ]
          },
          "x81C1" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c1"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81C1."
            } ]
          },
          "x81C4" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c41"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81C4."
            } ]
          },
          "x81C5" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c51"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81C5."
            } ]
          },
          "x81C6" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c6"
            }, {
              "description" : "A field for the element at sr:SupplierESMECommon/x81C6."
            } ]
          }
        }
      },
      "SrSupplierESMEPolyPhaseDto" : {
        "type" : "object",
        "properties" : {
          "x81B7" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b7"
            }, {
              "description" : "A field for the element at sr:SupplierESMEPolyPhase/x81B7."
            } ]
          }
        }
      },
      "SrSupplierGSMEAlertsEventsDto" : {
        "type" : "object",
        "properties" : {
          "x810D" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x810E" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8119" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8145" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8154" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8155" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8161" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8162" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8168" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8183" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x8184" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A0" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A1" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A4" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A5" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A6" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A7" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A8" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81A9" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AA" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AB" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AC" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AD" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AE" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81AF" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B0" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B1" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B2" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B3" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B4" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B5" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B6" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81B9" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81BA" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81BC" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81BD" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81BE" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81BF" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C0" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C2" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C3" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C4" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C5" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          },
          "x81C6" : {
            "$ref" : "#/components/schemas/SrWANHANEventLogAlarmDto"
          }
        }
      },
      "SrSupplierGSMEDto" : {
        "type" : "object",
        "properties" : {
          "x810D" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X810d"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x810D."
            } ]
          },
          "x810E" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X810e"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x810E."
            } ]
          },
          "x8119" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8119"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8119."
            } ]
          },
          "x8145" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8145"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8145."
            } ]
          },
          "x8154" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8154"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8154."
            } ]
          },
          "x8155" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8155"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8155."
            } ]
          },
          "x8168" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8168"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8168."
            } ]
          },
          "x8183" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8183"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8183."
            } ]
          },
          "x8184" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X8184"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x8184."
            } ]
          },
          "x81A1" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a1"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A1."
            } ]
          },
          "x81A4" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a4"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A4."
            } ]
          },
          "x81A5" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a5"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A5."
            } ]
          },
          "x81A6" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a6"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A6."
            } ]
          },
          "x81A7" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a7"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A7."
            } ]
          },
          "x81A8" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a8"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A8."
            } ]
          },
          "x81A9" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81a9"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81A9."
            } ]
          },
          "x81AA" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81aa"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AA."
            } ]
          },
          "x81AB" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ab"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AB."
            } ]
          },
          "x81AC" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ac"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AC."
            } ]
          },
          "x81AD" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ad"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AD."
            } ]
          },
          "x81AE" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ae"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AE."
            } ]
          },
          "x81AF" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81af"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81AF."
            } ]
          },
          "x81B0" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b0"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B0."
            } ]
          },
          "x81B1" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b1"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B1."
            } ]
          },
          "x81B2" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b2"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B2."
            } ]
          },
          "x81B3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b3"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B3."
            } ]
          },
          "x81B4" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b4"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B4."
            } ]
          },
          "x81B5" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b5"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B5."
            } ]
          },
          "x81B6" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b6"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B6."
            } ]
          },
          "x81B9" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81b9"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81B9."
            } ]
          },
          "x81BA" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81ba"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81BA."
            } ]
          },
          "x81BC" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bc"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81BC."
            } ]
          },
          "x81BD" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bd"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81BD."
            } ]
          },
          "x81BE" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81be"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81BE."
            } ]
          },
          "x81BF" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81bf"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81BF."
            } ]
          },
          "x81C0" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c0"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81C0."
            } ]
          },
          "x81C2" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c2"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81C2."
            } ]
          },
          "x81C3" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c3"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81C3."
            } ]
          },
          "x81C4" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c4"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81C4."
            } ]
          },
          "x81C5" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/X81c5"
            }, {
              "description" : "A field for the element at sr:SupplierGSME/x81C5."
            } ]
          }
        }
      },
      "SrSupplierOrNetworkOperatorCertificatesKRPDto" : {
        "type" : "object",
        "properties" : {
          "digitalSigningCertificate" : {
            "description" : "A field for the element at sr:SupplierOrNetworkOperatorCertificatesKRP/DigitalSigningCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementCertificate" : {
            "description" : "A field for the element at sr:SupplierOrNetworkOperatorCertificatesKRP/KeyAgreementCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "keyAgreementTopUpCertificate" : {
            "description" : "A field for the element at sr:SupplierOrNetworkOperatorCertificatesKRP/KeyAgreementTopUpCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrSwitchTypeAndIdDto" : {
        "required" : [ "index" ],
        "type" : "object",
        "properties" : {
          "alcs" : {
            "description" : "A field for the element at sr:SwitchTypeAndId/ALCS.",
            "type" : "boolean"
          },
          "hcalcs" : {
            "description" : "A field for the element at sr:SwitchTypeAndId/HCALCS.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "index" : {
            "description" : "sr:SwitchTypeAndId#index",
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrSynchroniseClockDto" : {
        "required" : [ "currentDateTime", "tolerancePeriod" ],
        "type" : "object",
        "properties" : {
          "currentDateTime" : {
            "description" : "A field for the element at sr:SynchroniseClock/CurrentDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "tolerancePeriod" : {
            "description" : "A field for the element at sr:SynchroniseClock/TolerancePeriod.",
            "maximum" : 86400,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrTariffPrimaryElementDto" : {
        "required" : [ "priceElements" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "elecTariffElements" : {
            "$ref" : "#/components/schemas/SrElecTariffElementsDto"
          },
          "gasTariffElements" : {
            "$ref" : "#/components/schemas/SrGasTariffElementsDto"
          },
          "priceElements" : {
            "$ref" : "#/components/schemas/SrPricePrimaryDto"
          }
        }
      },
      "SrTariffSecondaryElementDto" : {
        "required" : [ "switchingTable", "specialDays", "priceElements" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "switchingTable" : {
            "$ref" : "#/components/schemas/SrElecSwitchingTableSecondaryDto"
          },
          "specialDays" : {
            "description" : "A field for the element at sr:TariffSecondaryElement/SpecialDays.",
            "maxItems" : 50,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrElecSpecialDaySecondaryDto"
            }
          },
          "priceElements" : {
            "$ref" : "#/components/schemas/SrPriceSecondaryDto"
          }
        }
      },
      "SrTopUpDeviceDto" : {
        "required" : [ "utrn" ],
        "type" : "object",
        "properties" : {
          "utrn" : {
            "description" : "A field for the element at sr:TopUpDevice/UTRN. Either the value of a UTRN or the utrn() placeholder (e.g., $'{'utrn(value, unit)'}' or $'{'utrn(value, unit, kaSerialNumber)'}')",
            "type" : "string"
          }
        }
      },
      "SrUpdateDebtDto" : {
        "required" : [ "timeDebtRegister1", "timeDebtRegister2", "paymentDebtRegister", "debtRecoveryPerPayment" ],
        "type" : "object",
        "properties" : {
          "timeDebtRegister1" : {
            "description" : "A field for the element at sr:UpdateDebt/TimeDebtRegister1.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "timeDebtRegister2" : {
            "description" : "A field for the element at sr:UpdateDebt/TimeDebtRegister2.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "paymentDebtRegister" : {
            "description" : "A field for the element at sr:UpdateDebt/PaymentDebtRegister.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "debtRecoveryPerPayment" : {
            "description" : "A field for the element at sr:UpdateDebt/DebtRecoveryPerPayment.",
            "maximum" : 10000,
            "minimum" : 0,
            "type" : "integer"
          },
          "elecDebtRecovery1" : {
            "$ref" : "#/components/schemas/SrElecDebtRecoveryDto"
          },
          "elecDebtRecovery2" : {
            "$ref" : "#/components/schemas/SrElecDebtRecoveryDto"
          },
          "gasDebtRecovery1" : {
            "$ref" : "#/components/schemas/SrGasDebtRecoveryDto"
          },
          "gasDebtRecovery2" : {
            "$ref" : "#/components/schemas/SrGasDebtRecoveryDto"
          }
        }
      },
      "SrUpdateDeviceConfigurationALCDescriptionsDto" : {
        "type" : "object",
        "properties" : {
          "alcshcalcsDescription" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationALCDescriptions/ALCSHCALCSDescription.",
            "maxItems" : 5,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrALCSHCALCSDescriptionDto"
            }
          }
        }
      },
      "SrUpdateDeviceConfigurationALCSchedulerDto" : {
        "required" : [ "alcshcalcsConnectionSchedule", "alcshcalcsSpecialDays" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "alcshcalcsConnectionSchedule" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationALCScheduler/ALCSHCALCSConnectionSchedule.",
            "maxItems" : 48,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrALCSHCALCSConnectionScheduleDto"
            }
          },
          "alcshcalcsSpecialDays" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationALCScheduler/ALCSHCALCSSpecialDays.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ALCSHCALCSSpecialDayDto"
            }
          },
          "switchTypeAndId" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationALCScheduler/SwitchTypeAndId.",
            "maxItems" : 5,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrSwitchTypeAndIdDto"
            }
          }
        }
      },
      "SrUpdateDeviceConfigurationAuxiliaryControllerSchedulerDto" : {
        "required" : [ "auxiliaryControllerSpecialDayDefinitions" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "auxiliaryControllerSchedule" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationAuxiliaryControllerScheduler/AuxiliaryControllerSchedule.",
            "maxItems" : 120,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrAuxiliaryControllerScheduleDto"
            }
          },
          "auxiliaryControllerSpecialDayDefinitions" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationAuxiliaryControllerScheduler/AuxiliaryControllerSpecialDayDefinitions.",
            "maxItems" : 20,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AuxiliaryControllerSpecialDayDefinitionDto"
            }
          }
        }
      },
      "SrUpdateDeviceConfigurationDailyResettingOfTariffBlockCounterMatrixDto" : {
        "required" : [ "dailyTariffBlockCounterMatrixReset" ],
        "type" : "object",
        "properties" : {
          "dailyTariffBlockCounterMatrixReset" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationDailyResettingOfTariffBlockCounterMatrix/DailyTariffBlockCounterMatrixReset.",
            "type" : "boolean"
          }
        }
      },
      "SrUpdateDeviceConfigurationGasConversionDto" : {
        "required" : [ "calorificValue", "conversionFactor" ],
        "type" : "object",
        "properties" : {
          "calorificValue" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasConversion/CalorificValue.",
            "maximum" : 429496729.5,
            "minimum" : 0,
            "type" : "number"
          },
          "conversionFactor" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasConversion/ConversionFactor.",
            "maximum" : 42949.67295,
            "minimum" : 0,
            "type" : "number"
          }
        }
      },
      "SrUpdateDeviceConfigurationGasFlowDto" : {
        "required" : [ "supplyDepletionState", "supplyTamperState", "stabilisationPeriod", "measurementPeriod" ],
        "type" : "object",
        "properties" : {
          "uncontrolledGasFlowRate" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/UncontrolledGasFlowRate.",
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "uncontrolledGasFlowRateDecimal" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/UncontrolledGasFlowRateDecimal.",
            "maximum" : 6.5535,
            "minimum" : 0,
            "type" : "number"
          },
          "supplyDepletionState" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupplyDepletionState"
            }, {
              "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/SupplyDepletionState."
            } ]
          },
          "supplyTamperState" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SupplyTamperState1"
            }, {
              "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/SupplyTamperState."
            } ]
          },
          "stabilisationPeriod" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/StabilisationPeriod.",
            "maximum" : 255,
            "minimum" : 1,
            "type" : "integer"
          },
          "measurementPeriod" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationGasFlow/MeasurementPeriod.",
            "maximum" : 65535,
            "minimum" : 1,
            "type" : "integer"
          }
        }
      },
      "SrUpdateDeviceConfigurationInstantaneousPowerThresholdDto" : {
        "required" : [ "lowMediumPowerThreshold", "mediumHighPowerThreshold" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "lowMediumPowerThreshold" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationInstantaneousPowerThreshold/LowMediumPowerThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "mediumHighPowerThreshold" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationInstantaneousPowerThreshold/MediumHighPowerThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrUpdateDeviceConfigurationLoadLimitingCounterResetDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrUpdateDeviceConfigurationLoadLimitingGeneralSettingsDto" : {
        "required" : [ "loadLimitPeriod", "loadLimitPowerThreshold", "loadLimitRestorationPeriod", "loadLimitSupplyState" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "loadLimitPeriod" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationLoadLimitingGeneralSettings/LoadLimitPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "loadLimitPowerThreshold" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationLoadLimitingGeneralSettings/LoadLimitPowerThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "loadLimitRestorationPeriod" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationLoadLimitingGeneralSettings/LoadLimitRestorationPeriod.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "loadLimitSupplyState" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/LoadLimitSupplyState"
            }, {
              "description" : "A field for the element at sr:UpdateDeviceConfigurationLoadLimitingGeneralSettings/LoadLimitSupplyState."
            } ]
          }
        }
      },
      "SrUpdateDeviceConfigurationRMSVoltageCRDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          }
        }
      },
      "SrUpdateDeviceConfigurationVoltageDto" : {
        "required" : [ "rmsVoltageSettings" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "rmsVoltageSettings" : {
            "$ref" : "#/components/schemas/SrRMSVoltageSettingsDto"
          },
          "singlePhaseVoltageSettings" : {
            "$ref" : "#/components/schemas/SrAverageRMSVoltageSettingsDto"
          },
          "polyPhaseVoltageSettings" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationVoltage/PolyPhaseVoltageSettings.",
            "maxItems" : 3,
            "minItems" : 3,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SrPolyPhaseVoltageSettingsDto"
            }
          },
          "rmsVoltageCountersNotReset" : {
            "description" : "A field for the element at sr:UpdateDeviceConfigurationVoltage/RMSVoltageCountersNotReset.",
            "type" : "boolean"
          }
        }
      },
      "SrUpdateDeviceDetailsDto" : {
        "type" : "object",
        "properties" : {
          "deviceManufacturer" : {
            "description" : "A field for the element at sr:UpdateDeviceDetails/DeviceManufacturer.",
            "maxLength" : 30,
            "type" : "string"
          },
          "deviceModel" : {
            "description" : "A field for the element at sr:UpdateDeviceDetails/DeviceModel.",
            "maxLength" : 30,
            "type" : "string"
          },
          "smetschtsVersion" : {
            "description" : "A field for the element at sr:UpdateDeviceDetails/SMETSCHTSVersion.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "firmwareVersion" : {
            "description" : "A field for the element at sr:UpdateDeviceDetails/FirmwareVersion.",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          },
          "esmeVariant" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EsmeVariant"
            }, {
              "description" : "A field for the element at sr:UpdateDeviceDetails/ESMEVariant."
            } ]
          }
        }
      },
      "SrUpdateFirmwareDto" : {
        "required" : [ "firmwareImage", "firmwareVersion", "deviceIdList" ],
        "type" : "object",
        "properties" : {
          "firmwareImage" : {
            "description" : "A field for the element at sr:UpdateFirmware/FirmwareImage.",
            "maxLength" : 13653336,
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          },
          "firmwareVersion" : {
            "description" : "A field for the element at sr:UpdateFirmware/FirmwareVersion.",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          },
          "deviceIdList" : {
            "description" : "A field for the element at sr:UpdateFirmware/DeviceIDList.",
            "maxLength" : 1199999,
            "minLength" : 23,
            "pattern" : "^([A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2},)*([A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2})$",
            "type" : "string"
          }
        }
      },
      "SrUpdateHANDeviceLogDto" : {
        "required" : [ "deviceId", "requestType" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "deviceId" : {
            "description" : "A field for the element at sr:UpdateHANDeviceLog/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "requestType" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RequestType"
            }, {
              "description" : "A field for the element at sr:UpdateHANDeviceLog/RequestType."
            } ]
          },
          "addDeviceToChfWhitelist" : {
            "$ref" : "#/components/schemas/SrAddDeviceToCHFWhitelistDto"
          }
        }
      },
      "SrUpdateInventoryDto" : {
        "required" : [ "deviceId" ],
        "type" : "object",
        "properties" : {
          "deviceId" : {
            "description" : "A field for the element at sr:UpdateInventory/DeviceID.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}$",
            "type" : "string"
          },
          "updateDeviceStatusExceptCH" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDeviceStatusExceptCH"
            }, {
              "description" : "A field for the element at sr:UpdateInventory/UpdateDeviceStatusExceptCH."
            } ]
          },
          "updateDeviceStatusCH" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UpdateDeviceStatusCH"
            }, {
              "description" : "A field for the element at sr:UpdateInventory/UpdateDeviceStatusCH."
            } ]
          },
          "updateDeviceDetails" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceDetailsDto"
          },
          "deleteDevice" : {
            "description" : "A field for the element at sr:UpdateInventory/DeleteDevice.",
            "type" : "boolean"
          },
          "updateMpxn" : {
            "$ref" : "#/components/schemas/SrUpdateMPxNDto"
          }
        }
      },
      "SrUpdateMPxNDto" : {
        "type" : "object",
        "properties" : {
          "importMpxn" : {
            "description" : "A field for the element at sr:UpdateMPxN/ImportMPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          },
          "secondaryImportMpan" : {
            "description" : "A field for the element at sr:UpdateMPxN/SecondaryImportMPAN.",
            "minLength" : 13,
            "type" : "string"
          },
          "exportMpan" : {
            "description" : "A field for the element at sr:UpdateMPxN/ExportMPAN.",
            "minLength" : 13,
            "type" : "string"
          }
        }
      },
      "SrUpdateMeterBalanceDto" : {
        "type" : "object",
        "properties" : {
          "prepaymentMode" : {
            "$ref" : "#/components/schemas/SrAdjustOrResetDto"
          },
          "creditMode" : {
            "$ref" : "#/components/schemas/SrAdjustOrResetDto"
          }
        }
      },
      "SrUpdatePaymentModeDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "credit" : {
            "description" : "A field for the element at sr:UpdatePaymentMode/Credit.",
            "type" : "boolean"
          },
          "prepayment" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PrepaymentDto"
            }, {
              "description" : "A field for the element at sr:UpdatePaymentMode/Prepayment."
            } ]
          }
        }
      },
      "SrUpdatePrepayConfigElecDto" : {
        "required" : [ "debtRecoveryRateCap", "emergencyCreditLimit", "emergencyCreditThreshold", "lowCreditThreshold", "electricityNonDisablementCalendar", "maxMeterBalance", "maxCreditThreshold" ],
        "type" : "object",
        "properties" : {
          "debtRecoveryRateCap" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/DebtRecoveryRateCap.",
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "emergencyCreditLimit" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/EmergencyCreditLimit.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "emergencyCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/EmergencyCreditThreshold.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "lowCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/LowCreditThreshold.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "electricityNonDisablementCalendar" : {
            "$ref" : "#/components/schemas/SrElectricityNonDisablementCalendarDto"
          },
          "maxMeterBalance" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/MaxMeterBalance.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "maxCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigElec/MaxCreditThreshold.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          }
        }
      },
      "SrUpdatePrepayConfigGasDto" : {
        "required" : [ "debtRecoveryRateCap", "emergencyCreditLimit", "emergencyCreditThreshold", "lowCreditThreshold", "gasNonDisablementCalendar", "maxMeterBalance", "maxCreditThreshold" ],
        "type" : "object",
        "properties" : {
          "debtRecoveryRateCap" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/DebtRecoveryRateCap.",
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "emergencyCreditLimit" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/EmergencyCreditLimit.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "emergencyCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/EmergencyCreditThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "lowCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/LowCreditThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "gasNonDisablementCalendar" : {
            "$ref" : "#/components/schemas/SrGasNonDisablementCalendarDto"
          },
          "maxMeterBalance" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/MaxMeterBalance.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "maxCreditThreshold" : {
            "description" : "A field for the element at sr:UpdatePrepayConfigGas/MaxCreditThreshold.",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        }
      },
      "SrUpdatePrepayConfigurationDto" : {
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "updatePrepayConfigElectricity" : {
            "$ref" : "#/components/schemas/SrUpdatePrepayConfigElecDto"
          },
          "updatePrepayConfigGas" : {
            "$ref" : "#/components/schemas/SrUpdatePrepayConfigGasDto"
          }
        }
      },
      "SrUpdatePricePrimaryElementDto" : {
        "required" : [ "priceElements" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "priceElements" : {
            "$ref" : "#/components/schemas/SrPricePrimaryDto"
          }
        }
      },
      "SrUpdatePriceSecondaryElementDto" : {
        "required" : [ "priceElements" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "priceElements" : {
            "$ref" : "#/components/schemas/SrPriceSecondaryDto"
          }
        }
      },
      "SrUpdateSecurityCredentialsCoSDto" : {
        "required" : [ "supplierFloorSeqNumber", "supplierReplacementCertificates", "certificationPathCertificates", "applyTimeBasedCpvChecks", "importMpxn" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "supplierFloorSeqNumber" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsCoS/SupplierFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "supplierPrepaymentTopUpFloorSeqNumber" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsCoS/SupplierPrepaymentTopUpFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "supplierReplacementCertificates" : {
            "$ref" : "#/components/schemas/SrReplacementCertificatesCoSDto"
          },
          "certificationPathCertificates" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsCoS/CertificationPathCertificates.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "applyTimeBasedCpvChecks" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsCoS/ApplyTimeBasedCPVChecks.",
            "type" : "boolean"
          },
          "importMpxn" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsCoS/ImportMPxN.",
            "maxLength" : 13,
            "minLength" : 1,
            "type" : "string"
          }
        }
      },
      "SrUpdateSecurityCredentialsDeviceDto" : {
        "required" : [ "deviceCertificate" ],
        "type" : "object",
        "properties" : {
          "deviceCertificate" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsDevice/DeviceCertificate.",
            "pattern" : "^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$",
            "type" : "string"
          }
        }
      },
      "SrUpdateSecurityCredentialsKRPDto" : {
        "required" : [ "remotePartyRole", "replacementCertificates", "certificationPathCertificates", "applyTimeBasedCpvChecks" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "remotePartyRole" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/RemotePartyRole2"
            }, {
              "description" : "A field for the element at sr:UpdateSecurityCredentialsKRP/RemotePartyRole."
            } ]
          },
          "remotePartyFloorSeqNumber" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsKRP/RemotePartyFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "remotePartyPrepaymentTopUpFloorSeqNumber" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsKRP/RemotePartyPrepaymentTopUpFloorSeqNumber.",
            "maximum" : 9223372036854775807,
            "minimum" : 0,
            "type" : "integer"
          },
          "replacementCertificates" : {
            "$ref" : "#/components/schemas/SrReplacementCertificatesKRPDto"
          },
          "certificationPathCertificates" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsKRP/CertificationPathCertificates.",
            "maxItems" : 3,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "applyTimeBasedCpvChecks" : {
            "description" : "A field for the element at sr:UpdateSecurityCredentialsKRP/ApplyTimeBasedCPVChecks.",
            "type" : "boolean"
          }
        }
      },
      "SrUpdateSupplierNameDto" : {
        "required" : [ "supplierName", "supplierTelephoneNumber" ],
        "type" : "object",
        "properties" : {
          "executionDateTime" : {
            "description" : "A field for the element at sr:FutureDatedAbstractType/ExecutionDateTime. Either the value of a xs:dateTime or the dateTime() placeholder (e.g., ${dateTime()} or ${dateTime(offset)})",
            "type" : "string"
          },
          "supplierName" : {
            "description" : "A field for the element at sr:UpdateSupplierName/SupplierName.",
            "maxLength" : 15,
            "pattern" : "^[ -~]+$",
            "type" : "string"
          },
          "supplierTelephoneNumber" : {
            "description" : "A field for the element at sr:UpdateSupplierName/SupplierTelephoneNumber.",
            "maxLength" : 18,
            "pattern" : "^[0-9 ]+$",
            "type" : "string"
          }
        }
      },
      "SrWANHANEventLogAlarmDto" : {
        "required" : [ "wanAlert", "hanAlert", "eventLog", "alarm" ],
        "type" : "object",
        "properties" : {
          "wanAlert" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/WanAlert"
            }, {
              "description" : "A field for the element at sr:WANHANEventLogAlarm/WANAlert."
            } ]
          },
          "hanAlert" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/HanAlert"
            }, {
              "description" : "A field for the element at sr:WANHANEventLogAlarm/HANAlert."
            } ]
          },
          "eventLog" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/EventLog"
            }, {
              "description" : "A field for the element at sr:WANHANEventLogAlarm/EventLog."
            } ]
          },
          "alarm" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Alarm"
            }, {
              "description" : "A field for the element at sr:WANHANEventLogAlarm/Alarm."
            } ]
          }
        }
      },
      "SrWeekProfileGasDto" : {
        "required" : [ "weekName", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "weekName" : {
            "description" : "A field for the element at sr:WeekProfileGas/WeekName.",
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:WeekProfileGas/ReferencedDayName. Either the value of the day-of-week (e.g., \\1\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "minItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SrWeekProfileGasNonDisablementDto" : {
        "required" : [ "weekName", "referencedDayName" ],
        "type" : "object",
        "properties" : {
          "weekName" : {
            "description" : "A field for the element at sr:WeekProfileGasNonDisablement/WeekName.",
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer"
          },
          "referencedDayName" : {
            "description" : "A field for the element at sr:WeekProfileGasNonDisablement/ReferencedDayName. Either the value of the day-of-week (e.g., \\1\\) or the dayOfWeek() placeholder (e.g., \\${dayOfWeek()=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}}\\ or \\${dayOfWeek(offset)=<dayOfWeekValue>?<valueIfTrue>:<valueIfFalse>}\\)",
            "maxItems" : 7,
            "minItems" : 7,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Srv" : {
        "enum" : [ "1.1.1", "1.1.2", "1.2.1", "1.2.2", "1.5", "1.6", "1.7", "2.1", "2.2", "2.3", "2.5", "3.1", "3.2", "3.3", "3.4", "3.5", "4.1.1", "4.1.2", "4.1.3", "4.1.4", "4.2", "4.3", "4.4.2", "4.4.3", "4.4.4", "4.4.5", "4.6.1", "4.6.2", "4.8.1", "4.8.2", "4.8.3", "4.10", "4.11.1", "4.11.2", "4.12.1", "4.12.2", "4.13", "4.14", "4.15", "4.16", "4.17", "4.18", "5.1", "5.2", "5.3", "6.2.1", "6.2.2", "6.2.3", "6.2.4", "6.2.5", "6.2.7", "6.2.8", "6.2.9", "6.2.10", "6.4.1", "6.4.2", "6.5", "6.6", "6.7", "6.8", "6.11", "6.12", "6.13", "6.14.1", "6.14.2", "6.14.3", "6.15.1", "6.15.2", "6.17", "6.18.1", "6.18.2", "6.20.1", "6.20.2", "6.21", "6.22", "6.23", "6.24.1", "6.24.2", "6.25", "6.26", "6.27", "6.28", "6.29", "6.30", "6.31", "6.32", "7.1", "7.2", "7.3", "7.4", "7.5", "7.6", "7.7", "7.8", "7.9", "7.10", "7.11", "7.12", "7.13", "7.14", "7.15", "7.16", "8.1.1", "8.2", "8.3", "8.4", "8.5", "8.6", "8.7.1", "8.7.2", "8.8.1", "8.8.2", "8.9", "8.11", "8.12.1", "8.12.2", "8.13", "8.14.1", "8.14.2", "8.14.3", "8.14.4", "9.1", "11.1", "11.2", "11.3", "12.1", "12.2", "14.1" ],
        "type" : "string"
      },
      "Srv_11_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateFirmwareDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_11_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadFirmwareVersionDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_11_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrActivateFirmwareDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_12_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRequestWANMatrixDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_12_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDevicePrenotificationDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_14_1_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/RecordNetworkDataGAS.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_1_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrTariffPrimaryElementDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_1_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrTariffSecondaryElementDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_2_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdatePricePrimaryElementDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_2_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdatePriceSecondaryElementDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_5_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateMeterBalanceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_6_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdatePaymentModeDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_1_7_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ResetTariffBlockCounterMatrix.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_2_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdatePrepayConfigurationDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_2_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrTopUpDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_2_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDebtDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_2_5_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ActivateEmergencyCredit.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_3_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDisplayMessageDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_3_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRestrictAccessForChangeOfTenancyDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_3_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrClearEventLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_3_4_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateSupplierNameDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_3_5_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/DisablePrivacyPIN.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_10_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_11_1_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadTariffPrimaryElement.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_11_2_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadTariffSecondaryElement.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_12_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_12_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_13_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_14_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_15_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_16_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadActivePowerImport.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_17_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_18_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_1_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadInstantaneousImportRegistersDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_1_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_1_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_1_4_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDataOnDemandOrFutureDatedDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_4_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_4_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_4_4_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_4_5_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_6_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_6_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_8_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableAndURPCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_8_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_4_8_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_5_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDSPScheduleDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_5_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadScheduleDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_5_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDeleteScheduleDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_11_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSynchroniseClockDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_12_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationInstantaneousPowerThresholdDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_13_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadEventOrSecurityLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_14_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationALCDescriptionsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_14_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationALCSchedulerDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_14_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationAuxiliaryControllerSchedulerDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_15_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateSecurityCredentialsKRPDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_15_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateSecurityCredentialsDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_17_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrIssueSecurityCredentialsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_18_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetMaximumDemandConfigurableTimePeriodDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_18_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrResetMaximumDemandRegistersDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_20_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetDeviceConfigurationImportMPxNDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_20_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetDeviceConfiguratinExportMPANDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_21_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRequestHandoverOfDCCControlledDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_22_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrConfigureAlertBehaviourDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_23_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateSecurityCredentialsCoSDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_24_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRetrieveDeviceSecurityCredentialsKRPDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_24_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRetrieveDeviceSecurityCredentialsDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_25_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetElectricitySupplyTamperStateDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_26_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationDailyResettingOfTariffBlockCounterMatrixDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_27_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationRMSVoltageCRDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_28_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSubGHzConfigurationDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_29_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/RequestCHFSubGHzChannelScan.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_10_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationEventAndAlertBehaviours.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_1_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationVoltage.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_2_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationRandomisation.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_3_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationBillingCalendar.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_4_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationIdentityExcMPxN.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_5_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationInstantaneousPowerThresholds.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_7_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationMPxN.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_8_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationGas.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_2_9_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadDeviceConfigurationPaymentMode.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_30_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadCHFSubGHzConfiguration.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_31_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadCHFSubGHzChannel.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_32_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadCHFSubGHzChannelLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_4_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationLoadLimitingGeneralSettingsDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_4_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationLoadLimitingCounterResetDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_5_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationVoltageDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_6_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationGasConversionDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_7_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateDeviceConfigurationGasFlowDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_6_8_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrBillingCalendarDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_10_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRemoveAuxiliaryLoadFromBoostButtonDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_11_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadLogFutureDatableDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_12_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetRandomisedOffsetLimitDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_13_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSetAuxiliaryControllerStateDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_14_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadAuxiliaryControllerConfigurationDataDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_15_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadAuxiliaryControllerOperationalDataDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_16_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrLimitAPCLevelDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_1_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/EnableSupply.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_2_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/DisableSupply.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_3_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ArmSupply.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_4_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/ReadSupplyStatus.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_5_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrActivateAuxiliaryLoadDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_6_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDeactivateAuxiliaryLoadDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_7_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadALCSDataDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_8_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrResetAuxiliaryLoadDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_7_9_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrAddAuxiliaryLoadToBoostButtonDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_11_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateHANDeviceLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_12_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRestoreHANDeviceLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_12_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrRestoreGPFDeviceLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_13_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReturnLocalCommandResponseDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_14_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrCHFInstallSuccessSMWANDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_14_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrCHFInstallSuccessNoSMWANDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_14_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrCHFFaultReturnDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_14_4_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrCHFNoFaultReturnDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_1_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrSynchroniseClockDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadInventoryDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_3_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrDecommissionDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_4_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrUpdateInventoryDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_5_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrServiceOptOutDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_6_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrServiceOptInDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_7_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrJoinOrUnjoinDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_7_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrJoinOrUnjoinDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_8_1_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrJoinOrUnjoinDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_8_2_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrJoinOrUnjoinDeviceDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_8_9_Dto" : {
        "required" : [ "bodyParameters", "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "$ref" : "#/components/schemas/SrReadDeviceLogDto"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Srv_9_1_Dto" : {
        "required" : [ "duisVersion", "header" ],
        "type" : "object",
        "properties" : {
          "bodyParameters" : {
            "description" : "A field for the element at Body/RequestCustomerIdentificationNumber.",
            "type" : "object"
          },
          "duisVersion" : {
            "$ref" : "#/components/schemas/DuisVersion"
          },
          "header" : {
            "$ref" : "#/components/schemas/HeaderDto"
          }
        }
      },
      "Status" : {
        "enum" : [ "error", "success" ],
        "type" : "string"
      },
      "SupplyDepletionState" : {
        "enum" : [ "Locked", "Unchanged" ],
        "type" : "string"
      },
      "SupplyTamperState" : {
        "enum" : [ "Locked", "Unchanged" ],
        "type" : "string"
      },
      "SupplyTamperState1" : {
        "enum" : [ "Locked", "Unchanged" ],
        "type" : "string"
      },
      "TafErrorResponseDto" : {
        "required" : [ "status", "timestamp", "uuid", "errorCode", "errorMessage" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status"
            }, {
              "description" : "The result status of the request submission."
            } ]
          },
          "timestamp" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ZonedDateTime"
            }, {
              "description" : "The timestamp of the API call."
            } ]
          },
          "uuid" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UUID"
            }, {
              "description" : "The Universally Unique Identifier (UUID) of the API request."
            } ]
          },
          "errorCode" : {
            "description" : "The response error code.",
            "pattern" : "\\S",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "The response error message.",
            "pattern" : "\\S",
            "type" : "string"
          }
        }
      },
      "TafSchemaValidationReportDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "bodyXml" : {
            "description" : "This contains the XML element within the DUIS Body element (in base64).",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "duisVersion" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DuisVersion"
            }, {
              "description" : "DUIS Version of the DUIS Schema used to validate the content."
            } ]
          }
        }
      },
      "TransformRequestDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "duisRequest" : {
            "description" : "DUIS Request XML content in base64 that was submitted to the Transform web service. Only applicable to SMTS2 Critical requests.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "requestId" : {
            "description" : "This is the value of the element RequestID from the DUIS Request.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          }
        }
      },
      "TransformResponseDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "description" : "Operation status.",
            "type" : "string"
          },
          "errorMessage" : {
            "description" : "Message with the error description.",
            "type" : "string"
          },
          "dspHttpStatusCode" : {
            "format" : "int32",
            "description" : "HTTP status code from the DCC Gateway response.",
            "type" : "integer"
          },
          "duisResponse" : {
            "description" : "DUIS Response XML content in base64 that was received from the Transform web service. Only applicable to SMTS2 Critical requests.",
            "pattern" : "^([A-Za-z\\d+/]{4})*([A-Za-z\\d+/]{3}=|[A-Za-z\\d+/]{2}==)?$",
            "type" : "string"
          },
          "requestId" : {
            "description" : "This is the value of the element RequestID from the DUIS Response.",
            "pattern" : "^[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}-[A-Fa-f0-9]{2}:(0|[1-9][0-9]{0,18}|1[0-7][0-9]{18}|18[0-3][0-9]{17}|184[0-3][0-9]{16}|1844[0-5][0-9]{15}|18446[0-6][0-9]{14}|184467[0-3][0-9]{13}|1844674[0-3][0-9]{12}|184467440[0-6][0-9]{10}|1844674407[0-2][0-9]{9}|18446744073[0-6][0-9]{8}|1844674407370[0-8][0-9]{6}|18446744073709[0-4][0-9]{5}|184467440737095[0-4][0-9]{4}|18446744073709550[0-9]{3}|18446744073709551[0-5][0-9]{2}|1844674407370955160[0-9]|1844674407370955161[0-5])$",
            "type" : "string"
          },
          "responseCode" : {
            "description" : "This is the value of the element ResponseCode from the DUIS Response.",
            "type" : "string"
          },
          "dspSignatureValidationReport" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DspSignatureValidationReportDto"
            }, {
              "description" : "DSP Signature Validation Report. It contains the result of the validation of the DSP signature in the DUIS Response received from the transform web service, if present."
            } ]
          }
        }
      },
      "UUID" : {
        "format" : "uuid",
        "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
        "type" : "string"
      },
      "UpdateDeviceStatusCH" : {
        "enum" : [ "InstalledNotCommissioned", "Withdrawn", "Commissioned" ],
        "type" : "string"
      },
      "UpdateDeviceStatusExceptCH" : {
        "enum" : [ "InstalledNotCommissioned", "Pending" ],
        "type" : "string"
      },
      "WanAlert" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8002" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8003" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8004" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8005" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8006" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8007" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8008" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8009" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8010" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8011" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8013" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8014" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8015" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8016" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8020" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8021" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8022" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8023" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8024" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8025" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8026" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8027" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8028" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8029" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802a" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802b" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802c" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802d" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802e" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X802f" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8085" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8086" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8087" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8088" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8089" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808a" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808b" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808c" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808d" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808e" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X808f" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8090" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8091" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8092" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8093" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8094" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8095" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8096" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8097" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8098" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8099" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X809a" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X809b" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X809c" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X810d" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X810d1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X810e" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X810e1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8119" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81191" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8145" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81451" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8154" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81541" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8155" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81551" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8161" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8162" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8168" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81681" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8183" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81831" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X8184" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a0" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a11" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a2" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a3" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a4" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a41" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a5" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a51" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a6" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a61" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a7" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a71" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a8" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a81" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a9" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81a91" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81aa" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81aa1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ab" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ab1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ac" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ac1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ad" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ad1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ae" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ae1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81af" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81af1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b0" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b01" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b11" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b2" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b21" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b3" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b31" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b4" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b5" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b6" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b7" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b8" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b9" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81b91" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ba" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81ba1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bb" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bc" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bc1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bd" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bd1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81be" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81be1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81bf" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c0" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c01" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c1" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c2" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c3" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c4" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c41" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c5" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c51" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "X81c6" : {
        "enum" : [ "Enable", "Disable" ],
        "type" : "string"
      },
      "ZonedDateTime" : {
        "format" : "date-time",
        "type" : "string",
        "example" : "2022-03-10T12:15:50-04:00"
      }
    }
  }
}